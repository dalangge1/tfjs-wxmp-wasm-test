{"version":3,"file":"index.js","sources":["../../src/kernels/types.ts","../../src/kernels/_FusedMatMul.ts","../../src/kernels/unary_kernel.ts","../../src/kernels/Abs.ts","../../src/kernels/binary_kernel.ts","../../src/kernels/Add.ts","../../src/kernels/AddN.ts","../../src/kernels/Identity.ts","../../src/kernels/Transpose.ts","../../src/kernels/kernel_utils.ts","../../src/kernels/All.ts","../../src/kernels/Any.ts","../../src/kernels/ArgMax.ts","../../src/kernels/AvgPool.ts","../../src/kernels/Reshape.ts","../../src/kernels/BatchMatMul.ts","../../src/kernels/Cast.ts","../../src/kernels/Ceil.ts","../../src/kernels/ClipByValue.ts","../../../tfjs-backend-cpu/dist/kernels/Concat_impl.js","../../../tfjs-backend-cpu/dist/kernels/Range_impl.js","../../../tfjs-backend-cpu/dist/kernels/Slice.js","../../src/kernels/Concat.ts","../../src/kernels/Conv2D.ts","../../src/kernels/Conv2DBackpropInput.ts","../../src/kernels/Cos.ts","../../src/kernels/CropAndResize.ts","../../src/kernels/Cumsum.ts","../../src/kernels/DepthToSpace.ts","../../src/kernels/DepthwiseConv2dNative.ts","../../src/kernels/Equal.ts","../../src/kernels/Exp.ts","../../src/kernels/ExpandDims.ts","../../src/kernels/Fill.ts","../../src/kernels/FlipLeftRight.ts","../../src/kernels/Floor.ts","../../src/kernels/FloorDiv.ts","../../src/kernels/FusedBatchNorm.ts","../../src/kernels/FusedConv2D.ts","../../src/kernels/FusedDepthwiseConv2D.ts","../../src/kernels/GatherNd.ts","../../src/kernels/GatherV2.ts","../../src/kernels/Greater.ts","../../src/kernels/GreaterEqual.ts","../../src/kernels/LeakyRelu.ts","../../src/kernels/Less.ts","../../src/kernels/LessEqual.ts","../../src/kernels/Log.ts","../../src/kernels/LogicalAnd.ts","../../src/kernels/Max.ts","../../src/kernels/Maximum.ts","../../src/kernels/MaxPool.ts","../../src/kernels/Mean.ts","../../src/kernels/Min.ts","../../src/kernels/Minimum.ts","../../src/kernels/MirrorPad.ts","../../src/kernels/Multiply.ts","../../src/kernels/Neg.ts","../../src/kernels/NonMaxSuppression_util.ts","../../src/kernels/NonMaxSuppressionV3.ts","../../src/kernels/NonMaxSuppressionV4.ts","../../src/kernels/NonMaxSuppressionV5.ts","../../src/kernels/NotEqual.ts","../../src/kernels/OneHot.ts","../../src/kernels/OnesLike.ts","../../src/kernels/Pack.ts","../../src/kernels/PadV2.ts","../../src/kernels/Pow.ts","../../src/kernels/Prelu.ts","../../src/kernels/Prod.ts","../../src/kernels/Range.ts","../../src/kernels/RealDiv.ts","../../src/kernels/Relu.ts","../../src/kernels/Relu6.ts","../../src/kernels/ResizeBilinear.ts","../../src/kernels/Reverse.ts","../../src/kernels/RotateWithOffset.ts","../../src/kernels/Round.ts","../../src/kernels/Rsqrt.ts","../../src/kernels/ScatterNd.ts","../../src/kernels/Select.ts","../../src/kernels/Sigmoid.ts","../../src/kernels/Sin.ts","../../src/kernels/Slice.ts","../../src/kernels/Softmax.ts","../../src/kernels/SplitV.ts","../../src/kernels/Sqrt.ts","../../src/kernels/Square.ts","../../src/kernels/SquaredDifference.ts","../../src/kernels/Step.ts","../../src/kernels/StridedSlice.ts","../../src/kernels/Sub.ts","../../src/kernels/Sum.ts","../../src/kernels/Tan.ts","../../src/kernels/Tanh.ts","../../src/kernels/Tile.ts","../../src/kernels/TopK.ts","../../src/kernels/Transform.ts","../../src/kernels/Unpack.ts","../../src/kernels/ZerosLike.ts","../../src/register_all_kernels.ts","../../src/flags_wasm.ts","../../wasm-out/tfjs-backend-wasm-threaded-simd.js","../../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","../../wasm-out/tfjs-backend-wasm.js","../../src/backend_wasm.ts","../../src/version.ts","../../src/base.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\n// This enum must align with the enum defined in cc/backend.h.\r\nexport enum CppDType {\r\n  float32 = 0,\r\n  int32 = 1,\r\n  bool = 2,\r\n  string = 3,\r\n  complex64 = 4\r\n}\r\n\r\n// Must match enum in cc/fusable_activations.h.\r\nexport enum FusableActivation {\r\n  linear = 0,\r\n  relu = 1,\r\n  relu6 = 2,\r\n  prelu = 3,\r\n  leakyrelu = 4,\r\n  sigmoid = 5\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {FusableActivation} from './types';\r\n\r\nlet wasmFusedMatMul:\r\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\r\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\r\n     transposeB: boolean, activation: number, biasId: number,\r\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\r\n        void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\r\n    'number',  // a_id\r\n    'array',   // a_shape\r\n    'number',  // a_shape.length\r\n    'number',  // b_id\r\n    'array',   // b_shape\r\n    'number',  // b_shape.length\r\n    'number',  // transpose_a\r\n    'number',  // transpose_b\r\n    'number',  // activation\r\n    'number',  // biasId\r\n    'number',  // preluActivationWeightsId\r\n    'number',  // leakyreluAlpha\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction fusedBatchMatMul(args: {\r\n  inputs: _FusedMatMulInputs,\r\n  backend: BackendWasm,\r\n  attrs: _FusedMatMulAttrs\r\n}) {\r\n  const {inputs, backend, attrs} = args;\r\n  const {a, b, bias, preluActivationWeights} = inputs;\r\n\r\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\r\n    throw new Error(\r\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\r\n  }\r\n\r\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\r\n  const aId = backend.dataIdMap.get(a.dataId).id;\r\n  const bId = backend.dataIdMap.get(b.dataId).id;\r\n\r\n  let biasId = 0;\r\n  if (bias != null) {\r\n    const biasData = backend.dataIdMap.get(bias.dataId);\r\n    if (biasData.shape.length !== 1) {\r\n      throw new Error(\r\n          `_FusedMatMul only supports rank-1 bias but got ` +\r\n          `rank ${biasData.shape.length}.`);\r\n    }\r\n    biasId = biasData.id;\r\n  }\r\n  const preluActivationWeightsId = preluActivationWeights == null ?\r\n      0 :\r\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\r\n  const fusedActivation =\r\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\r\n  if (fusedActivation == null) {\r\n    throw new Error(\r\n        `${activation} activation not yet supported for FusedConv2D ` +\r\n        `in the wasm backend.`);\r\n  }\r\n\r\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\r\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\r\n  const batchDim = a.shape[0];\r\n\r\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\r\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\r\n\r\n  wasmFusedMatMul(\r\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\r\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\r\n      leakyreluAlpha || 0, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const fusedMatMulConfig: KernelConfig = {\r\n  kernelName: _FusedMatMul,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nexport function createUnaryKernelConfig(kernelName: string): KernelConfig {\r\n  let wasmFunc: (xId: number, outId: number) => void;\r\n\r\n  function setupFunc(backend: BackendWasm): void {\r\n    wasmFunc =\r\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\r\n  }\r\n\r\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\r\n      TensorInfo {\r\n    const {backend, inputs: {x}} = args;\r\n    const xId = backend.dataIdMap.get(x.dataId).id;\r\n    const out = backend.makeOutput(x.shape, x.dtype);\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n    // Short-circuit zero-sized tensors.\r\n    if (util.sizeFromShape(out.shape) === 0) {\r\n      return out;\r\n    }\r\n\r\n    wasmFunc(xId, outId);\r\n    return out;\r\n  }\r\n\r\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\n\r\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nexport function createBinaryKernelConfig(\r\n    kernelName: string, supportsFullBroadcast: boolean,\r\n    dtype?: DataType): KernelConfig {\r\n  let wasmFunc:\r\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\r\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\r\n          void;\r\n\r\n  function setupFunc(backend: BackendWasm): void {\r\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\r\n      'number',  // a_id,\r\n      'array',   // a_shape\r\n      'number',  // a_shape.length\r\n      'number',  // b_id\r\n      'array',   // b_shape\r\n      'number',  // b_shape.length\r\n      'number',  // dtype\r\n      'number'   // out_id\r\n    ]);\r\n  }\r\n\r\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\r\n      TensorInfo {\r\n    const {backend, inputs} = args;\r\n    const {a, b} = inputs;\r\n    const aId = backend.dataIdMap.get(a.dataId).id;\r\n    const bId = backend.dataIdMap.get(b.dataId).id;\r\n\r\n    const outputType = dtype != null ? dtype : a.dtype;\r\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\r\n    const out = backend.makeOutput(newShape, outputType);\r\n\r\n    // Short-circuit zero-sized tensors.\r\n    if (util.sizeFromShape(newShape) === 0) {\r\n      return out;\r\n    }\r\n\r\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\r\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    const kernelFunc = () => wasmFunc(\r\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\r\n        CppDType[a.dtype], outId);\r\n\r\n    // Currently only some float operations support full broadcast.\r\n    if (supportsFullBroadcast && a.dtype === 'float32') {\r\n      kernelFunc();\r\n      return out;\r\n    }\r\n\r\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\r\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\r\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\r\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\r\n    if (loopsOverAllOfA && loopsOverAllOfB) {\r\n      kernelFunc();\r\n      return out;\r\n    } else {\r\n      throw new Error(\r\n          `Broadcasting along outer dims is not yet ` +\r\n          `supported for ${a.dtype} ${kernelName}.`);\r\n    }\r\n  }\r\n\r\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = true;\r\n\r\nexport const addConfig: KernelConfig =\r\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmFunc:\r\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\r\n        void;\r\n\r\nfunction setupFunc(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\r\n    'array',   // input_ids\r\n    'number',  // input_ids.length\r\n    'number',  // dtype\r\n    'number',  // out_id\r\n  ]);\r\n}\r\n\r\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\r\n  const {inputs, backend} = args;\r\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\r\n\r\n  // Short-circuit zero-sized tensors.\r\n  if (util.sizeFromShape(out.shape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\r\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const addNConfig: KernelConfig = {\r\n  kernelName: AddN,\r\n  backendName: 'wasm',\r\n  setupFunc,\r\n  kernelFunc: addn as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\r\nimport {TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\r\n    TensorInfo {\r\n  const {inputs: {x}, backend} = args;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const inVals = backend.typedArrayFromHeap(x);\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  outVals.set(inVals);\r\n  return out;\r\n}\r\n\r\nexport const identityConfig: KernelConfig = {\r\n  kernelName: Identity,\r\n  backendName: 'wasm',\r\n  kernelFunc: identity as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {identity} from './Identity';\r\nimport {CppDType} from './types';\r\n\r\nlet wasmTranspose: (\r\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\r\n    outId: number, perm: Uint8Array, permLength: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\r\n    'number',  // xId\r\n    'array',   // x.shape\r\n    'number',  // x.shape.length\r\n    'number',  // dtype\r\n    'number',  // outId\r\n    'array',   // perm\r\n    'number',  // perm.length\r\n  ]);\r\n}\r\n\r\nexport function transpose(\r\n    args:\r\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\r\n    TensorInfo {\r\n  const {inputs, backend, attrs} = args;\r\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\r\n  // better due to simpler memory access pattern.\r\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\r\n\r\n  let permIsNoOp = true;\r\n  for (let i = 0; i < perm.length; i++) {\r\n    if (perm[i] !== i) {\r\n      permIsNoOp = false;\r\n    }\r\n  }\r\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\r\n  const x = {\r\n    dataId: inputs.x.dataId,\r\n    shape: reducedShape,\r\n    dtype: inputs.x.dtype\r\n  };\r\n\r\n  if (permIsNoOp) {\r\n    const cloned = identity({inputs, backend});\r\n    cloned.shape = outShape;\r\n    return cloned;\r\n  }\r\n\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\r\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n\r\n  wasmTranspose(\r\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\r\n      perm.length);\r\n  return out;\r\n}\r\n\r\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\r\n  const outShape = new Array(inShape.length);\r\n  for (let i = 0; i < outShape.length; i++) {\r\n    outShape[i] = inShape[perm[i]];\r\n  }\r\n  return outShape;\r\n}\r\n\r\nfunction removeOneSizeDims(\r\n    shape: number[], perm: number[]): [number[], number[]] {\r\n  const newShape: number[] = [];\r\n  const newPerm: number[] = [];\r\n  for (let i = 0; i < shape.length; ++i) {\r\n    if (shape[i] !== 1) {\r\n      newShape.push(shape[i]);\r\n    }\r\n    if (shape[perm[i]] !== 1) {\r\n      newPerm.push(perm[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < newPerm.length; ++i) {\r\n    let minValIdx = -1;\r\n    for (let j = 0; j < newPerm.length; ++j) {\r\n      if (newPerm[j] >= i &&\r\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\r\n        minValIdx = j;\r\n      }\r\n    }\r\n    newPerm[minValIdx] = i;\r\n  }\r\n  return [newShape, newPerm];\r\n}\r\n\r\nexport const transposeConfig: KernelConfig = {\r\n  kernelName: Transpose,\r\n  backendName: 'wasm',\r\n  kernelFunc: transpose as {} as KernelFunc,\r\n  setupFunc: setup,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {transpose} from './Transpose';\r\n\r\n/**\r\n * Compute permutation axes and do a transpose if necessary.\r\n *\r\n * Used by reduction ops.\r\n * @param x input TensorInfo\r\n * @param axis reduction axes\r\n * @param backend wasm backend instance\r\n */\r\nexport function permuteAxesAndTranspose(\r\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\r\n  transposed: TensorInfo|null,\r\n  axes: number[],\r\n  originalAxes: number[],\r\n  inputWasTransposed: boolean\r\n} {\r\n  const xShape = x.shape;\r\n  const xRank = x.shape.length;\r\n\r\n  const originalAxes = util.parseAxisParam(axis, xShape);\r\n  let axes = originalAxes;\r\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\r\n  let xTransposed = null;\r\n  let inputWasTransposed = false;\r\n  if (permutedAxes != null) {\r\n    const newShape: number[] = new Array(xRank);\r\n    for (let i = 0; i < newShape.length; i++) {\r\n      newShape[i] = xShape[permutedAxes[i]];\r\n    }\r\n\r\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\r\n    xTransposed =\r\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\r\n\r\n    const xId = backend.dataIdMap.get(x.dataId).id;\r\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      inputWasTransposed = true;\r\n    }\r\n  }\r\n\r\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    input = transposed;\r\n    inputId = transposedId;\r\n  }\r\n\r\n  const inputRank = input.shape.length;\r\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmAll(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const allConfig: KernelConfig = {\r\n  kernelName: All,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: all as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    input = transposed;\r\n    inputId = transposedId;\r\n  }\r\n\r\n  const inputRank = input.shape.length;\r\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmAny(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const anyConfig: KernelConfig = {\r\n  kernelName: Any,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: any as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\nimport {CppDType} from './types';\r\n\r\nlet wasmFunc: (\r\n    xId: number, dtype: number, outerSize: number, innerSize: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\r\n    'number',  // x_id\r\n    'number',  // dtype\r\n    'number',  // outer_size\r\n    'number',  // inner_size\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction argmax(\r\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis} = attrs as {} as ArgMaxAttrs;\r\n  const {x} = inputs as {} as ArgMaxInputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      // transpose was not a no-op. We will need to dispose of this\r\n      // once we are done.\r\n      input = transposed;\r\n      inputId = transposedId;\r\n    }\r\n  }\r\n\r\n  const outShape = input.shape.slice(0, -1);\r\n  const out = backend.makeOutput(outShape, 'int32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const outerSize = util.sizeFromShape(out.shape);\r\n  const innerSize = input.shape[axes[0]];\r\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const argMaxConfig: KernelConfig = {\r\n  kernelName: ArgMax,\r\n  backendName: 'wasm',\r\n  kernelFunc: argmax as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmAvgPool: (\r\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\r\n    padBottom: number, padLeft: number, strideHeight: number,\r\n    strideWidth: number, channels: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batchSize\r\n    'number',  // inputHeight\r\n    'number',  // inputWidth\r\n    'number',  // filterHeight\r\n    'number',  // filterWidth\r\n    'number',  // padTop\r\n    'number',  // padRight\r\n    'number',  // padBottom\r\n    'number',  // padLeft\r\n    'number',  // strideHeight\r\n    'number',  // strideWidth\r\n    'number',  // channels\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction avgPool(\r\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\r\n  const {inputs, attrs, backend} = args;\r\n\r\n  const x = inputs.x as Tensor4D;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n\r\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\r\n  const convInfo = backend_util.computePool2DInfo(\r\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const channels = convInfo.inChannels;\r\n\r\n  if (convInfo.dataFormat !== 'channelsLast') {\r\n    throw new Error(\r\n        `wasm backend does not support dataFormat:'` +\r\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\r\n  }\r\n\r\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\r\n    throw new Error(\r\n        `was backend only supports average pooling with dilation = [1, 1], ` +\r\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  wasmAvgPool(\r\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\r\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\r\n      outId);\r\n  return out;\r\n}\r\n\r\nexport const avgPoolConfig: KernelConfig = {\r\n  kernelName: AvgPool,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: avgPool as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, NamedAttrMap, NamedTensorInfoMap, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nexport function reshape(args: {\r\n  inputs: NamedTensorInfoMap,\r\n  attrs: NamedAttrMap,\r\n  backend: BackendWasm\r\n}) {\r\n  const {inputs, attrs} = args;\r\n  const {x} = inputs as {} as ReshapeInputs;\r\n  const {shape} = attrs as {} as ReshapeAttrs;\r\n\r\n  const xSize = util.sizeFromShape(x.shape);\r\n  const $shape = util.inferFromImplicitShape(shape, xSize);\r\n\r\n  util.assert(\r\n      xSize === util.sizeFromShape($shape),\r\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\r\n          `shape must have the same number of elements.`);\r\n\r\n  // Backend needs to track refCount for the dataId for reshape op\r\n  args.backend.incRef(x.dataId);\r\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\r\n}\r\n\r\nexport const reshapeConfig: KernelConfig = {\r\n  kernelName: Reshape,\r\n  backendName: 'wasm',\r\n  kernelFunc: reshape,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {reshape} from './Reshape';\r\n\r\nlet wasmBatchMatMul: (\r\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\r\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\r\n    transposeB: boolean, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\r\n    'number',  // a_id\r\n    'array',   // a_shape\r\n    'number',  // a_shape.length\r\n    'number',  // b_id\r\n    'array',   // b_shape\r\n    'number',  // b_shape.length\r\n    'number',  // transpose_a\r\n    'number',  // transpose_b\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction batchMatMul(args: {\r\n  inputs: BatchMatMulInputs,\r\n  backend: BackendWasm,\r\n  attrs: BatchMatMulAttrs\r\n}) {\r\n  const {inputs, backend, attrs} = args;\r\n  const {a, b} = inputs;\r\n  const {transposeA, transposeB} = attrs;\r\n\r\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\r\n    throw new Error(\r\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\r\n  }\r\n\r\n  const aRank = a.shape.length;\r\n  const bRank = b.shape.length;\r\n\r\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\r\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\r\n\r\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\r\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\r\n\r\n  const outerDimsA = a.shape.slice(0, -2);\r\n  const outerDimsB = b.shape.slice(0, -2);\r\n\r\n  const batchDimA = util.sizeFromShape(outerDimsA);\r\n  const batchDimB = util.sizeFromShape(outerDimsB);\r\n\r\n  const batchDimsCompatible =\r\n      batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\r\n\r\n  util.assert(\r\n      aRank >= 2 && bRank >= 2 && batchDimsCompatible,\r\n      () => `Error in matMul: the input batch dimensions must either be the ` +\r\n          `same or at least one input batch dimension must be 1. Got input ` +\r\n          `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\r\n\r\n  const outShapeOuterDims =\r\n      batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\r\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\r\n\r\n  util.assert(\r\n      innerShapeA === innerShapeB,\r\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\r\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\r\n          `${b.shape} and transposeA=${transposeA}` +\r\n          ` and transposeB=${transposeB} must match.`);\r\n\r\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\r\n                                [batchDimA, outerShapeA, innerShapeA];\r\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\r\n                                [batchDimB, innerShapeB, outerShapeB];\r\n\r\n  // The rest of the implementation is designed to operate on rank-3 tensors\r\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\r\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\r\n\r\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\r\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\r\n\r\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\r\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\r\n  const batchDim = Math.max(batchDimA, batchDimB);\r\n\r\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\r\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\r\n\r\n  wasmBatchMatMul(\r\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\r\n      b3d.shape.length, transposeA, transposeB, outId);\r\n\r\n  backend.disposeData(a3d.dataId);\r\n  backend.disposeData(b3d.dataId);\r\n\r\n  out.shape = outShape;\r\n  return out;\r\n}\r\n\r\nexport const batchMatMulConfig: KernelConfig = {\r\n  kernelName: BatchMatMul,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: batchMatMul as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\r\nimport {TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nexport function cast(\r\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\r\n    TensorInfo {\r\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\r\n  const out = backend.makeOutput(x.shape, dtype);\r\n  const inVals = backend.typedArrayFromHeap(x);\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  outVals.set(inVals);\r\n  return out;\r\n}\r\n\r\nexport const castConfig: KernelConfig = {\r\n  kernelName: Cast,\r\n  backendName: 'wasm',\r\n  kernelFunc: cast as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\n\r\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\r\n    'number',  // x_id\r\n    'number',  // min\r\n    'number',  // max\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction clip(args: {\r\n  inputs: ClipByValueInputs,\r\n  backend: BackendWasm,\r\n  attrs: ClipByValueAttrs\r\n}) {\r\n  const {inputs, backend, attrs} = args;\r\n  const {x} = inputs;\r\n  const {clipValueMin, clipValueMax} = attrs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\r\n  return out;\r\n}\r\n\r\nexport const clipByValueConfig: KernelConfig = {\r\n  kernelName: ClipByValue,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: clip as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { backend_util, util } from '@tensorflow/tfjs-core';\r\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\r\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\r\n    if (simplyConcat && dtype !== 'string') {\r\n        // Use built-in TypedArray.set() method for speed.\r\n        let offset = 0;\r\n        inputs.forEach(input => {\r\n            const size = util.sizeFromShape(input.shape);\r\n            outVals.set(input.vals, offset);\r\n            offset += size;\r\n        });\r\n    }\r\n    else {\r\n        let colOffset = 0;\r\n        inputs.forEach(input => {\r\n            const decodedData = dtype === 'string' ?\r\n                backend_util.fromUint8ToStringArray(input.vals) :\r\n                input.vals;\r\n            let tIdx = 0;\r\n            for (let row = 0; row < input.shape[0]; ++row) {\r\n                const resIdx = row * outShape[1] + colOffset;\r\n                for (let col = 0; col < input.shape[1]; ++col) {\r\n                    outVals[resIdx + col] = decodedData[tIdx++];\r\n                }\r\n            }\r\n            colOffset += input.shape[1];\r\n        });\r\n    }\r\n    return outVals;\r\n}\r\n//# sourceMappingURL=Concat_impl.js.map","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { util } from '@tensorflow/tfjs-core';\r\nexport function rangeImpl(start, stop, step, dtype) {\r\n    const sameStartStop = start === stop;\r\n    const increasingRangeNegativeStep = start < stop && step < 0;\r\n    const decreasingRangePositiveStep = stop < start && step > 1;\r\n    if (sameStartStop || increasingRangeNegativeStep ||\r\n        decreasingRangePositiveStep) {\r\n        return util.makeZerosTypedArray(0, dtype);\r\n    }\r\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\r\n    const values = util.makeZerosTypedArray(numElements, dtype);\r\n    if (stop < start && step === 1) {\r\n        // Auto adjust the step's sign if it hasn't been set\r\n        // (or was set to 1)\r\n        step = -1;\r\n    }\r\n    values[0] = start;\r\n    for (let i = 1; i < values.length; i++) {\r\n        values[i] = values[i - 1] + step;\r\n    }\r\n    return values;\r\n}\r\n//# sourceMappingURL=Range_impl.js.map","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\r\nimport { assertNotComplex } from '../cpu_util';\r\nexport function sliceImpl(vals, begin, size, shape, dtype) {\r\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\r\n    const length = util.sizeFromShape(size);\r\n    const xStrides = util.computeStrides(shape);\r\n    if (isContinous) {\r\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\r\n        if (dtype === 'string') {\r\n            return vals.slice(flatOffset, flatOffset + length);\r\n        }\r\n        return vals.subarray(flatOffset, flatOffset + length);\r\n    }\r\n    const decodedData = dtype === 'string' ?\r\n        backend_util.fromUint8ToStringArray(vals) :\r\n        vals;\r\n    const inBuf = buffer(shape, dtype, decodedData);\r\n    const outBuf = buffer(size, dtype);\r\n    for (let i = 0; i < outBuf.size; ++i) {\r\n        const outLoc = outBuf.indexToLoc(i);\r\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\r\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\r\n    }\r\n    if (dtype === 'string') {\r\n        return backend_util.fromStringArrayToUint8(outBuf.values);\r\n    }\r\n    return outBuf.values;\r\n}\r\nexport function slice(args) {\r\n    const { inputs, backend, attrs } = args;\r\n    const { x } = inputs;\r\n    const { begin, size } = attrs;\r\n    assertNotComplex(x, 'slice');\r\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\r\n    slice_util.assertParamsValid(x, $begin, $size);\r\n    const vals = backend.data.get(x.dataId).values;\r\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\r\n    return backend.makeTensorInfo($size, x.dtype, outVals);\r\n}\r\nexport const sliceConfig = {\r\n    kernelName: Slice,\r\n    backendName: 'cpu',\r\n    kernelFunc: slice\r\n};\r\n//# sourceMappingURL=Slice.js.map","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {concatImplCPU} from '../kernel_utils/shared';\r\nimport {identity} from './Identity';\r\nimport {reshape} from './Reshape';\r\n\r\nexport function concat(\r\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\r\n  const {inputs, backend} = args;\r\n\r\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\r\n\r\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\r\n\r\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\r\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\r\n  if ($inputs.length === 1) {\r\n    return identity({inputs: {x: $inputs[0]}, backend});\r\n  }\r\n\r\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\r\n\r\n  if (util.sizeFromShape(outShape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  const shapes = $inputs.map(t => t.shape);\r\n  backend_util.assertParamsConsistent(shapes, axis);\r\n\r\n  if ($inputs[0].dtype === 'string') {\r\n    // Any concat of n-dimensional tensors across any axis can be reduced to\r\n    // a concatenation of two-dimensional tensors across the axis 1 by first\r\n    // partitioning the axes of the original tensors into those less than the\r\n    // axis to be concatenated and the rest. Then reshape the tensors\r\n    // into a two-dimensional tensor by collapsing these two sets of axes and\r\n    // concatenate the resulting matrices across the axis 1, finally reshaping\r\n    // the result to have the proper shape.\r\n    const inputs2D = $inputs.map(t => {\r\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\r\n      const shape = [-1, innerSize];\r\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\r\n    });\r\n\r\n    const inputsValShapes = inputs2D.map(t => {\r\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\r\n    });\r\n\r\n    // Concats 2d tensors along axis=1.\r\n    outShape =\r\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\r\n    const simplyConcat = inputs2D[0].shape[0] === 1;\r\n    const outVals = concatImplCPU(\r\n                        inputsValShapes, outShape, inputs[0].dtype,\r\n                        simplyConcat) as string[];\r\n\r\n    const finalOutShape =\r\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\r\n\r\n    out.shape = finalOutShape;\r\n    const outData = backend.dataIdMap.get(out.dataId);\r\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\r\n\r\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\r\n\r\n    return out;\r\n  }\r\n\r\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\r\n  let sumInnerDims = 0;\r\n  const innerDims = $inputs.map(input => {\r\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\r\n    sumInnerDims += innerDim;\r\n    return innerDim;\r\n  });\r\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  for (let b = 0; b < batchDim; b++) {\r\n    let outOffset = b * sumInnerDims;\r\n    for (let i = 0; i < inVals.length; i++) {\r\n      const innerDim = innerDims[i];\r\n      const inOffset = b * innerDim;\r\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\r\n      outVals.set(vals, outOffset);\r\n      outOffset += innerDim;\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\nexport const concatConfig: KernelConfig = {\r\n  kernelName: Concat,\r\n  backendName: 'wasm',\r\n  kernelFunc: concat as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmConv2d: (\r\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\r\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\r\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\r\n    strideWidth: number, inputChannels: number, outputChannels: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batchSize\r\n    'number',  // inputHeight\r\n    'number',  // inputWidth\r\n    'number',  // filterId\r\n    'number',  // filterHeight\r\n    'number',  // filterWidth\r\n    'number',  // padTop\r\n    'number',  // padRight\r\n    'number',  // padBottom\r\n    'number',  // padLeft\r\n    'number',  // isSamePad\r\n    'number',  // dilationHeight\r\n    'number',  // dilationWidth\r\n    'number',  // strideHeight\r\n    'number',  // strideWidth\r\n    'number',  // inputChannels\r\n    'number',  // outputChannels\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction conv2d(\r\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\r\n  const {inputs, attrs, backend} = args;\r\n\r\n  const {x, filter} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\r\n\r\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\r\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\r\n  const convInfo = backend_util.computeConv2DInfo(\r\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\r\n      pad, dimRoundingMode, false, $dataFormat);\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const dilationHeight = convInfo.dilationHeight;\r\n  const dilationWidth = convInfo.dilationWidth;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const inputChannels = convInfo.inChannels;\r\n  const outputChannels = convInfo.outChannels;\r\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\r\n\r\n  if (convInfo.dataFormat !== 'channelsLast') {\r\n    throw new Error(\r\n        `wasm backend Conv2D does not support dataFormat:'` +\r\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmConv2d(\r\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\r\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\r\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\r\n      outputChannels, outId);\r\n  return out;\r\n}\r\n\r\nexport const conv2DConfig: KernelConfig = {\r\n  kernelName: Conv2D,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: conv2d as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmConv2DBackpropInput: (\r\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\r\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\r\n    outHeight: number, outWidth: number, outChannels: number,\r\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\r\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\r\n    xRowStride: number, xColStride: number, xChannelStride: number,\r\n    yBatchStride: number, yRowStride: number, yColStride: number,\r\n    yChannelStride: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\r\n    'number',  // dyId\r\n    'number',  // filterId\r\n    'number',  // batchSize\r\n    'number',  // filterHeight\r\n    'number',  // filterWidth\r\n    'number',  // inHeight\r\n    'number',  // inWidth\r\n    'number',  // inChannels\r\n    'number',  // outHeight\r\n    'number',  // outWidth\r\n    'number',  // outChannels\r\n    'number',  // strideHeight\r\n    'number',  // strideWidth\r\n    'number',  // topPad\r\n    'number',  // leftPad\r\n    'number',  // fltS0\r\n    'number',  // fltS1\r\n    'number',  // fltS2\r\n    'number',  // xBatchStride\r\n    'number',  // xRowStride\r\n    'number',  // xColStride\r\n    'number',  // xChannelStride\r\n    'number',  // yBatchStride\r\n    'number',  // yRowStride\r\n    'number',  // yColStride\r\n    'number',  // yChannelStride\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction conv2DBackpropInput(args: {\r\n  backend: BackendWasm,\r\n  inputs: Conv2DBackpropInputInputs,\r\n  attrs: Conv2DBackpropInputAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {dy, filter} = inputs;\r\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\r\n\r\n  const dilations = 1;\r\n\r\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\r\n  const convInfo = backend_util.computeConv2DInfo(\r\n      inputShape, filter.shape as [number, number, number, number], strides,\r\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\r\n  const {\r\n    batchSize,\r\n    filterHeight,\r\n    filterWidth,\r\n    inChannels,\r\n    inHeight,\r\n    inWidth,\r\n    outChannels,\r\n    outHeight,\r\n    outWidth,\r\n    strideHeight,\r\n    strideWidth\r\n  } = convInfo;\r\n\r\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\r\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\r\n\r\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\r\n  const dxStrides = util.computeStrides(convInfo.inShape);\r\n  const dyStrides = util.computeStrides(dy.shape);\r\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\r\n  const xBatchStride = dxStrides[0];\r\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\r\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\r\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\r\n  const yBatchStride = dyStrides[0];\r\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\r\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\r\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\r\n\r\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\r\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\r\n\r\n  wasmConv2DBackpropInput(\r\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\r\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\r\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\r\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\r\n      yChannelStride, outId);\r\n  return out;\r\n}\r\n\r\nexport const conv2DBackpropInputConfig: KernelConfig = {\r\n  kernelName: Conv2DBackpropInput,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\n\r\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {cast} from './Cast';\r\n\r\n// Must match enum in CropAndResize.cc\r\nenum InterpolationMethod {\r\n  bilinear = 0,\r\n  nearest = 1\r\n}\r\n\r\nlet wasmCropAndResize: (\r\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\r\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\r\n    method: number, extrapolationValue: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\r\n    'number',  // imagesId\r\n    'number',  // boxesId\r\n    'number',  // boxIndId\r\n    'number',  // numBoxes\r\n    'array',   // images shape\r\n    'number',  // cropHeight\r\n    'number',  // cropWidth\r\n    'number',  // method\r\n    'number',  // extrapolation value\r\n    'number'   // out id\r\n  ]);\r\n}\r\n\r\nfunction cropAndResize(args: {\r\n  backend: BackendWasm,\r\n  inputs: CropAndResizeInputs,\r\n  attrs: CropAndResizeAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {method, extrapolationValue, cropSize} = attrs;\r\n  const {image, boxes, boxInd} = inputs;\r\n\r\n  const numBoxes = boxes.shape[0];\r\n\r\n  const [cropHeight, cropWidth] = cropSize as [number, number];\r\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\r\n\r\n  let imagesData = backend.dataIdMap.get(image.dataId);\r\n  let castedData;\r\n  if (image.dtype !== 'float32') {\r\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\r\n    imagesData = backend.dataIdMap.get(castedData.dataId);\r\n  }\r\n\r\n  const imagesId = imagesData.id;\r\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\r\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\r\n\r\n  const out = backend.makeOutput(outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\r\n\r\n  wasmCropAndResize(\r\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\r\n      cropWidth,\r\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\r\n      extrapolationValue, outId);\r\n\r\n  if (castedData != null) {\r\n    backend.disposeData(castedData.dataId);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const cropAndResizeConfig: KernelConfig = {\r\n  kernelName: CropAndResize,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: cropAndResize as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nimport {transpose} from './Transpose';\r\n\r\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\r\n                 finalDim: number, outId: number, dtype: CppDType) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\r\n    'number', // x_id\r\n    'number', // exclusive\r\n    'number', // reverse\r\n    'number', // final_dim\r\n    'number', // out_id\r\n    'number'  // dtype\r\n  ]);\r\n}\r\n\r\nexport function cumsum(\r\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\r\nTensorInfo {\r\n  const {inputs, backend, attrs} = args;\r\n  const {x} = inputs;\r\n  const {axis, exclusive, reverse} = attrs;\r\n  const xRank = x.shape.length;\r\n\r\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\r\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\r\n  // permute required axis to inner most axis\r\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\r\n  let permutedX = x;\r\n  if (permutation !== null) {\r\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\r\n  }\r\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\r\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\r\n\r\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\r\n  const finalDim = permutedX.shape[permutedAxis];\r\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\r\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\r\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\r\n             permutedOutId, CppDType[x.dtype]);\r\n\r\n  // transpose data back if permuted\r\n  let out = permutedOut;\r\n  if (permutation !== null) {\r\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\r\n    out = transpose(\r\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\r\n    backend.disposeData(permutedX.dataId);\r\n    backend.disposeData(permutedOut.dataId);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport const cumsumConfig: KernelConfig = {\r\n  kernelName: Cumsum,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: cumsum as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmDepthToSpace: (\r\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\r\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\r\n    outSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\r\n    'number',  // xId\r\n    'number',  // blockSize\r\n    'number',  // channelsLast\r\n    'array',   // xStrides\r\n    'number',  // xStridesLength\r\n    'array',   // outputShape\r\n    'array',   // outputStrides\r\n    'number',  // outSize\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nexport function depthToSpace(args: {\r\n  backend: BackendWasm,\r\n  inputs: DepthToSpaceInputs,\r\n  attrs: DepthToSpaceAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {x} = inputs;\r\n  const {blockSize, dataFormat} = attrs;\r\n\r\n  util.assert(\r\n      blockSize > 1,\r\n      () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\r\n\r\n  const batchSize = x.shape[0];\r\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\r\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\r\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\r\n\r\n  const outputHeight = inputHeight * blockSize;\r\n  const outputWidth = inputWidth * blockSize;\r\n  const outputDepth = inputDepth / (blockSize * blockSize);\r\n\r\n  const outputShape = (dataFormat === 'NHWC') ?\r\n      [batchSize, outputHeight, outputWidth, outputDepth] :\r\n      [batchSize, outputDepth, outputHeight, outputWidth];\r\n\r\n  const out = backend.makeOutput(outputShape, 'float32');\r\n\r\n  const xData = backend.dataIdMap.get(x.dataId);\r\n  const xId = xData.id;\r\n  const xStridesBytes =\r\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\r\n\r\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\r\n  const outStridesBytes =\r\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\r\n\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\r\n  wasmDepthToSpace(\r\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\r\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const depthToSpaceConfig: KernelConfig = {\r\n  kernelName: DepthToSpace,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: depthToSpace as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmDepthwiseConv2d: (\r\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\r\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\r\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\r\n    strideWidth: number, inputChannels: number, outputChannels: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmDepthwiseConv2d =\r\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\r\n        'number',  // xId\r\n        'number',  // batchSize\r\n        'number',  // inputHeight\r\n        'number',  // inputWidth\r\n        'number',  // filterId\r\n        'number',  // filterHeight\r\n        'number',  // filterWidth\r\n        'number',  // padTop\r\n        'number',  // padRight\r\n        'number',  // padBottom\r\n        'number',  // padLeft\r\n        'number',  // isSamePad\r\n        'number',  // dilationHeight\r\n        'number',  // dilationWidth\r\n        'number',  // strideHeight\r\n        'number',  // strideWidth\r\n        'number',  // inputChannels\r\n        'number',  // outputChannels\r\n        'number',  // outId\r\n      ]);\r\n}\r\n\r\nfunction depthwiseConv2d(args: {\r\n  inputs: DepthwiseConv2dNativeInputs,\r\n  backend: BackendWasm,\r\n  attrs: DepthwiseConv2dNativeAttrs\r\n}) {\r\n  const {inputs, attrs, backend} = args;\r\n\r\n  const {x, filter} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\r\n\r\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\r\n\r\n  const $dilations = dilations == null ? [1, 1] : dilations;\r\n\r\n  const convInfo = backend_util.computeConv2DInfo(\r\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\r\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\r\n      true /* depthwise */);\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const dilationHeight = convInfo.dilationHeight;\r\n  const dilationWidth = convInfo.dilationWidth;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const inputChannels = convInfo.inChannels;\r\n  const outputChannels = convInfo.outChannels;\r\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\r\n\r\n  if (convInfo.dataFormat !== 'channelsLast') {\r\n    throw new Error(\r\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\r\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmDepthwiseConv2d(\r\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\r\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\r\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\r\n      outputChannels, outId);\r\n  return out;\r\n}\r\n\r\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\r\n  kernelName: DepthwiseConv2dNative,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = false;\r\nexport const equalConfig: KernelConfig =\r\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\n\r\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {reshape} from './Reshape';\r\n\r\nexport function expandDims(args: {\r\n  inputs: ExpandDimsInputs,\r\n  attrs: ExpandDimsAttrs,\r\n  backend: BackendWasm\r\n}) {\r\n  const {inputs, attrs, backend} = args;\r\n  const {input} = inputs;\r\n  const {dim} = attrs;\r\n\r\n  const inputRank = input.shape.length;\r\n  const newShape = input.shape.slice();\r\n  let $dim = dim;\r\n  if (dim < 0) {\r\n    // Negative value is counted from the tail of rank.\r\n    util.assert(\r\n        -(inputRank + 1) <= dim,\r\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\r\n            inputRank}]`);\r\n    $dim = inputRank + dim + 1;\r\n  }\r\n  newShape.splice($dim, 0, 1);\r\n\r\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\r\n}\r\n\r\nexport const expandDimsConfig: KernelConfig = {\r\n  kernelName: ExpandDims,\r\n  backendName: 'wasm',\r\n  kernelFunc: expandDims as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\r\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nfunction fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\r\n  const {attrs: {shape, value, dtype}, backend} = args;\r\n  const out = backend.makeOutput(shape, dtype);\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  outVals.fill(value as number);\r\n  return out;\r\n}\r\n\r\nexport const fillConfig: KernelConfig = {\r\n  kernelName: Fill,\r\n  backendName: 'wasm',\r\n  kernelFunc: fill as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmFlipLeftRight: (\r\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\r\n    numChannels: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batch\r\n    'number',  // imageHeight\r\n    'number',  // imageWidth\r\n    'number',  // numChannels\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nexport function flipLeftRight(\r\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\r\n  const {inputs, backend} = args;\r\n  const {image} = inputs;\r\n\r\n  const out = backend.makeOutput(image.shape, image.dtype);\r\n  const imageId = backend.dataIdMap.get(image.dataId).id;\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\r\n\r\n  wasmFlipLeftRight(\r\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\r\n  return out;\r\n}\r\n\r\nexport const flipLeftRightConfig: KernelConfig = {\r\n  kernelName: FlipLeftRight,\r\n  backendName: 'wasm',\r\n  kernelFunc: flipLeftRight as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = false;\r\nexport const floorDivConfig: KernelConfig =\r\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmBatchNorm: (\r\n    xId: number, meanId: number, varianceId: number, offsetId: number,\r\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmBatchNorm = backend.wasm.cwrap(\r\n      FusedBatchNorm, null /* void */,\r\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\r\n}\r\n\r\nfunction fusedBatchNorm(args: {\r\n  backend: BackendWasm,\r\n  inputs: FusedBatchNormInputs,\r\n  attrs: FusedBatchNormAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {varianceEpsilon} = attrs;\r\n  const {x, mean, variance, offset, scale} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\r\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\r\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\r\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\r\n\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  // Short-circuit zero-sized tensors.\r\n  if (util.sizeFromShape(x.shape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  wasmBatchNorm(\r\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\r\n  return out;\r\n}\r\n\r\nexport const fusedBatchNormConfig: KernelConfig = {\r\n  kernelName: FusedBatchNorm,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {FusableActivation} from './types';\r\n\r\nlet wasmFusedConv2d:\r\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n     filterId: number, filterHeight: number, filterWidth: number,\r\n     biasId: number, padTop: number, padRight: number, padBottom: number,\r\n     padLeft: number, isSamePad: number, dilationHeight: number,\r\n     dilationWidth: number, strideHeight: number, strideWidth: number,\r\n     inputChannels: number, outputChannels: number, activation: number,\r\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\r\n        void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batchSize\r\n    'number',  // inputHeight\r\n    'number',  // inputWidth\r\n    'number',  // filterId\r\n    'number',  // filterHeight\r\n    'number',  // filterWidth\r\n    'number',  // biasId\r\n    'number',  // padTop\r\n    'number',  // padRight\r\n    'number',  // padBottom\r\n    'number',  // padLeft\r\n    'number',  // isSamePad\r\n    'number',  // dilationHeight\r\n    'number',  // dilationWidth\r\n    'number',  // strideHeight\r\n    'number',  // strideWidth\r\n    'number',  // inputChannels\r\n    'number',  // outputChannels\r\n    'number',  // activation\r\n    'number',  // preluActivationWeightsId\r\n    'number',  // leakyreluAlpha\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction fusedConv2d(args: {\r\n  inputs: FusedConv2DInputs,\r\n  backend: BackendWasm,\r\n  attrs: FusedConv2DAttrs\r\n}) {\r\n  const {inputs, attrs, backend} = args;\r\n  const {x, filter, bias, preluActivationWeights} = inputs;\r\n  const {\r\n    strides,\r\n    pad,\r\n    dilations,\r\n    dataFormat,\r\n    dimRoundingMode,\r\n    activation,\r\n    leakyreluAlpha\r\n  } = attrs;\r\n\r\n  const convInfo = backend_util.computeConv2DInfo(\r\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\r\n      pad, dimRoundingMode);\r\n\r\n  const fusedActivation =\r\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\r\n  if (fusedActivation == null) {\r\n    throw new Error(\r\n        `${activation} activation not yet supported for FusedConv2D ` +\r\n        `in the wasm backend.`);\r\n  }\r\n\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\r\n\r\n  const outputChannels = convInfo.outChannels;\r\n\r\n  let biasId = 0;\r\n  if (bias != null) {\r\n    const biasData = backend.dataIdMap.get(bias.dataId);\r\n    if (biasData.shape.length !== 1) {\r\n      throw new Error(\r\n          `FusedConv2D only supports rank-1 bias but got ` +\r\n          `rank ${biasData.shape.length}.`);\r\n    }\r\n    if (biasData.shape[0] !== outputChannels) {\r\n      throw new Error(\r\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\r\n          `match the number of output channels (${outputChannels})`);\r\n    }\r\n    biasId = biasData.id;\r\n  }\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const dilationHeight = convInfo.dilationHeight;\r\n  const dilationWidth = convInfo.dilationWidth;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const inputChannels = convInfo.inChannels;\r\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\r\n  const batchSize = convInfo.batchSize;\r\n  const inHeight = convInfo.inHeight;\r\n  const inWidth = convInfo.inWidth;\r\n\r\n  if (dataFormat !== 'NHWC') {\r\n    throw new Error(\r\n        `wasm backend FusedConv2D does not support dataFormat:'` +\r\n        `${dataFormat}'. Please use 'NHWC'.`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const preluActivationWeightsId = preluActivationWeights == null ?\r\n      0 :\r\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\r\n\r\n  wasmFusedConv2d(\r\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\r\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\r\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\r\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const fusedConv2DConfig: KernelConfig = {\r\n  kernelName: FusedConv2D,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: fusedConv2d as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {FusableActivation} from './types';\r\n\r\nlet wasmFusedDepthwiseConv2d:\r\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n     filterId: number, filterHeight: number, filterWidth: number,\r\n     biasId: number, padTop: number, padRight: number, padBottom: number,\r\n     padLeft: number, isSamePad: number, dilationHeight: number,\r\n     dilationWidth: number, strideHeight: number, strideWidth: number,\r\n     inputChannels: number, outputChannels: number, activation: number,\r\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\r\n        void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmFusedDepthwiseConv2d =\r\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\r\n        'number',  // xId\r\n        'number',  // batchSize\r\n        'number',  // inputHeight\r\n        'number',  // inputWidth\r\n        'number',  // filterId\r\n        'number',  // filterHeight\r\n        'number',  // filterWidth\r\n        'number',  // biasId\r\n        'number',  // padTop\r\n        'number',  // padRight\r\n        'number',  // padBottom\r\n        'number',  // padLeft\r\n        'number',  // isSamePad\r\n        'number',  // dilationHeight\r\n        'number',  // dilationWidth\r\n        'number',  // strideHeight\r\n        'number',  // strideWidth\r\n        'number',  // inputChannels\r\n        'number',  // outputChannels\r\n        'number',  // activation\r\n        'number',  // preluActivationWeightsId\r\n        'number',  // leakyreluAlpha\r\n        'number',  // outId\r\n      ]);\r\n}\r\n\r\nfunction fusedDepthwiseConv2d(args: {\r\n  inputs: FusedDepthwiseConv2DInputs,\r\n  backend: BackendWasm,\r\n  attrs: FusedDepthwiseConv2DAttrs\r\n}) {\r\n  const {inputs, attrs, backend} = args;\r\n  const {x, filter, bias, preluActivationWeights} = inputs;\r\n  const {\r\n    strides,\r\n    pad,\r\n    dilations,\r\n    dataFormat,\r\n    dimRoundingMode,\r\n    activation,\r\n    leakyreluAlpha\r\n  } = attrs;\r\n\r\n  const convInfo = backend_util.computeConv2DInfo(\r\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\r\n      pad, dimRoundingMode, true /* depthwise */);\r\n\r\n  const fusedActivation =\r\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\r\n  if (fusedActivation == null) {\r\n    throw new Error(\r\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\r\n        `in the wasm backend.`);\r\n  }\r\n\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\r\n\r\n  const outputChannels = convInfo.outChannels;\r\n\r\n  let biasId = 0;\r\n  if (bias != null) {\r\n    const biasData = backend.dataIdMap.get(bias.dataId);\r\n    if (biasData.shape.length !== 1) {\r\n      throw new Error(\r\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\r\n          `rank ${biasData.shape.length}.`);\r\n    }\r\n    if (biasData.shape[0] !== outputChannels) {\r\n      throw new Error(\r\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\r\n          `match the number of output channels (${outputChannels})`);\r\n    }\r\n    biasId = biasData.id;\r\n  }\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const dilationHeight = convInfo.dilationHeight;\r\n  const dilationWidth = convInfo.dilationWidth;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const inputChannels = convInfo.inChannels;\r\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\r\n  const batchSize = convInfo.batchSize;\r\n  const inHeight = convInfo.inHeight;\r\n  const inWidth = convInfo.inWidth;\r\n\r\n  if (dataFormat !== 'NHWC') {\r\n    throw new Error(\r\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\r\n        `${dataFormat}'. Please use 'NHWC'.`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const preluActivationWeightsId = preluActivationWeights == null ?\r\n      0 :\r\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\r\n\r\n  wasmFusedDepthwiseConv2d(\r\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\r\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\r\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\r\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\r\n  kernelName: FusedDepthwiseConv2D,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmGatherNd: (\r\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\r\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\r\n    void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\r\n    'number',  // xId\r\n    'number',  // dtype\r\n    'number',  // indicesId\r\n    'number',  // numSlices\r\n    'number',  // sliceRank\r\n    'number',  // sliceSize\r\n    'array',   // strides\r\n    'number'   // outId\r\n  ]);\r\n}\r\n\r\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\r\n    TensorInfo {\r\n  const {backend, inputs} = args;\r\n  const {params, indices} = inputs;\r\n\r\n  const [resultShape, numSlices, sliceSize, strides] =\r\n      gather_util.prepareAndValidate(params, indices);\r\n\r\n  const out = backend.makeOutput(resultShape, params.dtype);\r\n  if (numSlices === 0) {\r\n    return out;\r\n  }\r\n\r\n  const indicesShape = indices.shape;\r\n  const sliceRank = indicesShape[indicesShape.length - 1];\r\n\r\n  const xData = backend.dataIdMap.get(params.dataId);\r\n  const xId = xData.id;\r\n  const indicesData = backend.dataIdMap.get(indices.dataId);\r\n  const indicesId = indicesData.id;\r\n\r\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\r\n\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmGatherNd(\r\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\r\n      stridesBytes, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const gatherNdConfig: KernelConfig = {\r\n  kernelName: GatherNd,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: gatherNd\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {reshape} from './Reshape';\r\nimport {CppDType} from './types';\r\n\r\nlet wasmGather: (\r\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\r\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\r\n    'number',  // xId\r\n    'number',  // dtype\r\n    'array',   // xStrides\r\n    'number',  // stridesSize\r\n    'number',  // indicesId\r\n    'number',  // batchSize\r\n    'array',   // outStrides\r\n    'number'   // outId\r\n  ]);\r\n}\r\n\r\nfunction gatherV2(\r\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {x, indices} = inputs;\r\n  const {axis, batchDims} = attrs;\r\n\r\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\r\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\r\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\r\n\r\n  const flattenX = reshape({\r\n    inputs: {x},\r\n    attrs: {\r\n      shape: [\r\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\r\n        shapeInfo.sliceSize\r\n      ]\r\n    },\r\n    backend\r\n  });\r\n  const indicesSize = util.sizeFromShape(indices.shape);\r\n  const flattenIndex = reshape({\r\n    inputs: {x: indices},\r\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\r\n    backend\r\n  });\r\n  const flattenOutputShape = [\r\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\r\n    shapeInfo.sliceSize\r\n  ];\r\n\r\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\r\n  if (util.sizeFromShape(x.shape) === 0) {\r\n    return out;\r\n  }\r\n  const stridesSize = flattenX.shape.length - 1;\r\n\r\n  const xData = backend.dataIdMap.get(flattenX.dataId);\r\n  const xId = xData.id;\r\n\r\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\r\n  const indicesId = indicesData.id;\r\n\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const xStridesBytes = new Uint8Array(\r\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\r\n  const outStridesBytes = new Uint8Array(\r\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\r\n\r\n  wasmGather(\r\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\r\n      shapeInfo.batchSize, outStridesBytes, outId);\r\n\r\n  backend.disposeData(flattenX.dataId);\r\n  backend.disposeData(flattenIndex.dataId);\r\n\r\n  // reshape\r\n  out.shape = shapeInfo.outputShape;\r\n  return out;\r\n}\r\n\r\nexport const gatherV2Config: KernelConfig = {\r\n  kernelName: GatherV2,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: gatherV2 as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = false;\r\nexport const greaterConfig: KernelConfig =\r\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = false;\r\nexport const greaterEqualConfig: KernelConfig =\r\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, util} from '@tensorflow/tfjs-core';\r\nimport {TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmFunc: (xId: number, leakyreluAlpha: number, outId: number) => void;\r\n\r\nfunction setupFunc(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\r\n    'number',  // x_id,\r\n    'number',  // leakyrelu_alpha\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nexport function leakyRelu(\r\n    args:\r\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\r\n    TensorInfo {\r\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\r\n\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n\r\n  if (util.sizeFromShape(x.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmFunc(xId, alpha, outId);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const leakyReluConfig: KernelConfig = {\r\n  kernelName: LeakyRelu,\r\n  backendName: 'wasm',\r\n  setupFunc,\r\n  kernelFunc: leakyRelu as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const lessConfig: KernelConfig =\r\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const lessEqualConfig: KernelConfig =\r\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const logicalAndConfig: KernelConfig =\r\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\r\nimport {Max, MaxAttrs, MaxInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {reductionIndices: axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    input = transposed;\r\n    inputId = transposedId;\r\n  }\r\n\r\n  const inputRank = input.shape.length;\r\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmMax(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const maxConfig: KernelConfig = {\r\n  kernelName: Max,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: max as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const maximumConfig: KernelConfig =\r\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmMaxPool: (\r\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\r\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\r\n    padBottom: number, padLeft: number, dilationHeight: number,\r\n    dilationWidth: number, strideHeight: number, strideWidth: number,\r\n    inputChannels: number, outputChannels: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batchSize\r\n    'number',  // inputHeight\r\n    'number',  // inputWidth\r\n    'number',  // filterHeight\r\n    'number',  // filterWidth\r\n    'number',  // padTop\r\n    'number',  // padRight\r\n    'number',  // padBottom\r\n    'number',  // padLeft\r\n    'number',  // dilationHeight\r\n    'number',  // dilationWidth\r\n    'number',  // strideHeight\r\n    'number',  // strideWidth\r\n    'number',  // inputChannels\r\n    'number',  // outputChannels\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction maxPool(\r\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\r\n  const {inputs, attrs, backend} = args;\r\n\r\n  const x = inputs.x as Tensor4D;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n\r\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\r\n  const convInfo = backend_util.computePool2DInfo(\r\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\r\n\r\n  const filterHeight = convInfo.filterHeight;\r\n  const filterWidth = convInfo.filterWidth;\r\n  const padTop = convInfo.padInfo.top;\r\n  const padRight = convInfo.padInfo.right;\r\n  const padBottom = convInfo.padInfo.bottom;\r\n  const padLeft = convInfo.padInfo.left;\r\n  const dilationHeight = convInfo.dilationHeight;\r\n  const dilationWidth = convInfo.dilationWidth;\r\n  const strideHeight = convInfo.strideHeight;\r\n  const strideWidth = convInfo.strideWidth;\r\n  const inputChannels = convInfo.inChannels;\r\n  const outputChannels = convInfo.outChannels;\r\n\r\n  if (convInfo.dataFormat !== 'channelsLast') {\r\n    throw new Error(\r\n        `wasm backend does not support dataFormat:'` +\r\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\r\n  }\r\n\r\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  wasmMaxPool(\r\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\r\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\r\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\r\n  return out;\r\n}\r\n\r\nexport const maxPoolConfig: KernelConfig = {\r\n  kernelName: MaxPool,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: maxPool as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {cast} from './Cast';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmMean =\r\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nexport function mean(\r\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  let reductionAxes = axes;\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      // transpose was not a no-op. We will need to dispose of this\r\n      // once we are done.\r\n      input = transposed;\r\n      inputId = transposedId;\r\n      reductionAxes = backend_util.getInnerMostAxes(\r\n          reductionAxes.length, input.shape.length);\r\n    }\r\n  }\r\n\r\n  backend_util.assertAxesAreInnerMostDims(\r\n      'mean', reductionAxes, input.shape.length);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n  let castedInput = input;\r\n  if (input.dtype !== 'float32') {\r\n    castedInput =\r\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\r\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\r\n  }\r\n\r\n  const out = backend.makeOutput(outShape, 'float32');\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmMean(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  if (input.dtype !== 'float32') {\r\n    backend.disposeData(castedInput.dataId);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const meanConfig: KernelConfig = {\r\n  kernelName: Mean,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: mean as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      // transpose was not a no-op. We will need to dispose of this\r\n      // once we are done.\r\n      input = transposed;\r\n      inputId = transposedId;\r\n    }\r\n  }\r\n\r\n  const inputRank = input.shape.length;\r\n\r\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, input.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmMin(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const minConfig: KernelConfig = {\r\n  kernelName: Min,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: min as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const minimumConfig: KernelConfig =\r\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\n// Must match enum in MirrorPad.cc\r\nenum MirrorPaddingMode {\r\n  reflect = 0,\r\n  symmetric = 1\r\n}\r\n\r\nlet wasmMirrorPad: (\r\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\r\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\r\n    'number',  // xId\r\n    'array',   // x.shape\r\n    'number',  // x.shape.length\r\n    'number',  // x.dtype\r\n    'array',   // pre-paddings\r\n    'array',   // post-paddings\r\n    'number',  // mode\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction mirrorPad(args: {\r\n  inputs: MirrorPadInputs,\r\n  backend: BackendWasm,\r\n  attrs: MirrorPadAttrs\r\n}) {\r\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\r\n\r\n  const outShape = paddings.map(\r\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n\r\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\r\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\r\n  const prePaddingsBytes =\r\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\r\n  const postPaddingsBytes =\r\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\r\n\r\n  wasmMirrorPad(\r\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\r\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\r\n  return out;\r\n}\r\n\r\nexport const mirrorPadConfig: KernelConfig = {\r\n  kernelName: MirrorPad,\r\n  backendName: 'wasm',\r\n  kernelFunc: mirrorPad as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = true;\r\nexport const multiplyConfig: KernelConfig =\r\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\r\ninterface Result {\r\n  pSelectedIndices: number;\r\n  selectedSize: number;\r\n  pSelectedScores: number;\r\n  pValidOutputs: number;\r\n}\r\n/**\r\n * Parse the result of the c++ method, which has the shape equivalent to\r\n * `Result`.\r\n */\r\nexport function parseResultStruct(\r\n    backend: BackendWasm, resOffset: number): Result {\r\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\r\n  const pSelectedIndices = result[0];\r\n  const selectedSize = result[1];\r\n  const pSelectedScores = result[2];\r\n  const pValidOutputs = result[3];\r\n  // Since the result was allocated on the heap, we have to delete it.\r\n  backend.wasm._free(resOffset);\r\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {parseResultStruct} from './NonMaxSuppression_util';\r\n\r\nlet wasmFunc: (\r\n    boxesId: number, scoresId: number, maxOutputSize: number,\r\n    iouThreshold: number, scoreThreshold: number) => number;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(\r\n      NonMaxSuppressionV3,\r\n      'number',  // Result*\r\n      [\r\n        'number',  // boxesId\r\n        'number',  // scoresId\r\n        'number',  // maxOutputSize\r\n        'number',  // iouThreshold\r\n        'number',  // scoreThreshold\r\n      ]);\r\n}\r\n\r\nfunction kernelFunc(args: {\r\n  backend: BackendWasm,\r\n  inputs: NonMaxSuppressionV3Inputs,\r\n  attrs: NonMaxSuppressionV3Attrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\r\n  const {boxes, scores} = inputs;\r\n\r\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\r\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\r\n\r\n  const resOffset =\r\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\r\n\r\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\r\n      parseResultStruct(backend, resOffset);\r\n\r\n  // Since we are not using scores for V3, we have to delete it from the heap.\r\n  backend.wasm._free(pSelectedScores);\r\n  backend.wasm._free(pValidOutputs);\r\n\r\n  const selectedIndicesTensor =\r\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\r\n\r\n  return selectedIndicesTensor;\r\n}\r\n\r\nexport const nonMaxSuppressionV3Config: KernelConfig = {\r\n  kernelName: NonMaxSuppressionV3,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: kernelFunc as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {parseResultStruct} from './NonMaxSuppression_util';\r\n\r\nlet wasmFunc: (\r\n    boxesId: number, scoresId: number, maxOutputSize: number,\r\n    iouThreshold: number, scoreThreshold: number,\r\n    padToMaxOutputSize: boolean) => number;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(\r\n      NonMaxSuppressionV4,\r\n      'number',  // Result*\r\n      [\r\n        'number',  // boxesId\r\n        'number',  // scoresId\r\n        'number',  // maxOutputSize\r\n        'number',  // iouThreshold\r\n        'number',  // scoreThreshold\r\n        'bool',    // padToMaxOutputSize\r\n      ]);\r\n}\r\n\r\nfunction nonMaxSuppressionV4(args: {\r\n  backend: BackendWasm,\r\n  inputs: NonMaxSuppressionV4Inputs,\r\n  attrs: NonMaxSuppressionV4Attrs\r\n}): TensorInfo[] {\r\n  const {backend, inputs, attrs} = args;\r\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\r\n      attrs;\r\n  const {boxes, scores} = inputs;\r\n\r\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\r\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\r\n\r\n  const resOffset = wasmFunc(\r\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\r\n      padToMaxOutputSize);\r\n\r\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\r\n      parseResultStruct(backend, resOffset);\r\n\r\n  // Since we are not using scores for V4, we have to delete it from the heap.\r\n  backend.wasm._free(pSelectedScores);\r\n\r\n  const selectedIndicesTensor =\r\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\r\n\r\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\r\n\r\n  return [selectedIndicesTensor, validOutputsTensor];\r\n}\r\n\r\nexport const nonMaxSuppressionV4Config: KernelConfig = {\r\n  kernelName: NonMaxSuppressionV4,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {parseResultStruct} from './NonMaxSuppression_util';\r\n\r\nlet wasmFunc:\r\n    (boxesId: number, scoresId: number, maxOutputSize: number,\r\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\r\n        number;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(\r\n      NonMaxSuppressionV5,\r\n      'number',  // Result*\r\n      [\r\n        'number',  // boxesId\r\n        'number',  // scoresId\r\n        'number',  // maxOutputSize\r\n        'number',  // iouThreshold\r\n        'number',  // scoreThreshold\r\n        'number',  // softNmsSigma\r\n      ]);\r\n}\r\n\r\nfunction kernelFunc(args: {\r\n  backend: BackendWasm,\r\n  inputs: NonMaxSuppressionV5Inputs,\r\n  attrs: NonMaxSuppressionV5Attrs\r\n}): TensorInfo[] {\r\n  const {backend, inputs, attrs} = args;\r\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\r\n  const {boxes, scores} = inputs;\r\n\r\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\r\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\r\n\r\n  const resOffset = wasmFunc(\r\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\r\n      softNmsSigma);\r\n\r\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\r\n      parseResultStruct(backend, resOffset);\r\n\r\n  // Since we are not using validOutputs for V5, we have to delete it from the\r\n  // heap.\r\n  backend.wasm._free(pValidOutputs);\r\n\r\n  const selectedIndicesTensor =\r\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\r\n  const selectedScoresTensor =\r\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\r\n\r\n  return [selectedIndicesTensor, selectedScoresTensor];\r\n}\r\n\r\nexport const nonMaxSuppressionV5Config: KernelConfig = {\r\n  kernelName: NonMaxSuppressionV5,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: kernelFunc as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const notEqualConfig: KernelConfig =\r\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmOneHot: (\r\n    indicesId: number, depth: number, onValue: number, offValue: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\r\n    'number',  // indices_id\r\n    'number',  // depth,\r\n    'number',  // onValue\r\n    'number',  // offValue\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction oneHot(\r\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\r\n  const {inputs, backend, attrs} = args;\r\n  const {indices} = inputs;\r\n  const {depth, onValue, offValue} = attrs;\r\n\r\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const indicesData = backend.dataIdMap.get(indices.dataId);\r\n  const indicesId = indicesData.id;\r\n\r\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const oneHotConfig: KernelConfig = {\r\n  kernelName: OneHot,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: oneHot as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\r\n  const {inputs: {x}, backend} = args;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  outVals.fill(1);\r\n  return out;\r\n}\r\n\r\nexport const onesLikeConfig: KernelConfig = {\r\n  kernelName: OnesLike,\r\n  backendName: 'wasm',\r\n  kernelFunc: onesLike as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {concat} from './Concat';\r\nimport {expandDims} from './ExpandDims';\r\n\r\nexport function pack(\r\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\r\n    TensorInfo {\r\n  const {inputs, backend, attrs} = args;\r\n  const {axis} = attrs;\r\n\r\n  if (inputs.length === 1) {\r\n    return expandDims(\r\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\r\n  }\r\n\r\n  const shape = inputs[0].shape;\r\n  const dtype = inputs[0].dtype;\r\n\r\n  inputs.forEach(t => {\r\n    util.assertShapesMatch(\r\n        shape, t.shape,\r\n        'All tensors passed to stack must have matching shapes');\r\n    util.assert(\r\n        dtype === t.dtype,\r\n        () => 'All tensors passed to stack must have matching dtypes');\r\n  });\r\n\r\n  const intermediateTensorInfos: TensorInfo[] = [];\r\n  const expandedTensors = inputs.map(t => {\r\n    const expandedT =\r\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\r\n    intermediateTensorInfos.push(expandedT);\r\n    return expandedT;\r\n  });\r\n\r\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\r\n\r\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\r\n\r\n  return result;\r\n}\r\n\r\nexport const packConfig: KernelConfig = {\r\n  kernelName: Pack,\r\n  backendName: 'wasm',\r\n  kernelFunc: pack as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmPadV2: (\r\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\r\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\r\n    constantValue: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\r\n    'number',  // xId\r\n    'array',   // x.shape\r\n    'number',  // x.shape.length\r\n    'number',  // x.dtype\r\n    'array',   // pre-paddings\r\n    'array',   // post-paddings\r\n    'number',  // constantValue\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction pad(\r\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\r\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\r\n\r\n  const outShape = paddings.map(\r\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const out = backend.makeOutput(outShape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n\r\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\r\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\r\n  const prePaddingsBytes =\r\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\r\n  const postPaddingsBytes =\r\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\r\n\r\n  wasmPadV2(\r\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\r\n      postPaddingsBytes, constantValue, outId);\r\n  return out;\r\n}\r\n\r\nexport const padV2Config: KernelConfig = {\r\n  kernelName: PadV2,\r\n  backendName: 'wasm',\r\n  kernelFunc: pad as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = false;\r\nexport const powConfig: KernelConfig =\r\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\r\n    'number',  // x_id\r\n    'number',  // weights_id\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\r\n  const {inputs, backend} = args;\r\n  const {x, alpha} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\r\n\r\n  const out = backend.makeOutput(x.shape, 'float32');\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmPrelu(xId, weightsId, outId);\r\n  return out;\r\n}\r\n\r\nexport const preluConfig: KernelConfig = {\r\n  kernelName: Prelu,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: prelu as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmProd: (\r\n    xId: number, reduceSize: number,\r\n    dtype: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\r\n    'number',\r\n    'number',\r\n    'number',\r\n    'number'\r\n  ]);\r\n}\r\n\r\nfunction prod(args: {\r\n  backend: BackendWasm,\r\n  inputs: ProdInputs,\r\n  attrs: ProdAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  let reductionAxes = axes;\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      // transpose was not a no-op. We will need to dispose of this\r\n      // once we are done.\r\n      input = transposed;\r\n      inputId = transposedId;\r\n      reductionAxes = backend_util.getInnerMostAxes(\r\n          reductionAxes.length, input.shape.length);\r\n    }\r\n  }\r\n\r\n  backend_util.assertAxesAreInnerMostDims(\r\n      'prod', reductionAxes, input.shape.length);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, input.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const prodConfig: KernelConfig = {\r\n  kernelName: Prod,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: prod as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {rangeImplCPU} from '../kernel_utils/shared';\r\n\r\nexport const range =\r\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\r\n      const {backend, attrs} = args;\r\n      const {start, stop, step, dtype} = attrs;\r\n      const values = rangeImplCPU(start, stop, step, dtype);\r\n\r\n      const out = backend.makeOutput([values.length], dtype);\r\n      const outVals = backend.typedArrayFromHeap(out);\r\n      outVals.set(values);\r\n      return out;\r\n    };\r\n\r\nexport const rangeConfig: KernelConfig = {\r\n  kernelName: Range,\r\n  backendName: 'wasm',\r\n  kernelFunc: range as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\r\n\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\n\r\nconst supportsFullBroadcast = true;\r\nexport const realDivConfig: KernelConfig =\r\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {cast} from './Cast';\r\n\r\nlet wasmResizeBilinear: (\r\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\r\n    numChannels: number, newHeight: number, newWidth: number,\r\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\r\n    'number',  // xId\r\n    'number',  // batch\r\n    'number',  // oldHeight\r\n    'number',  // oldWidth\r\n    'number',  // numChannels\r\n    'number',  // newHeight\r\n    'number',  // newWidth\r\n    'number',  // alignCorners\r\n    'number',  // halfPixelCenters\r\n    'number'   // outId\r\n  ]);\r\n}\r\n\r\nfunction resizeBilinear(args: {\r\n  backend: BackendWasm,\r\n  inputs: ResizeBilinearInputs,\r\n  attrs: ResizeBilinearAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n\r\n  const {images} = inputs;\r\n  const {alignCorners, halfPixelCenters, size} = attrs;\r\n  const [newHeight, newWidth] = size;\r\n\r\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\r\n  const outShape = [batch, newHeight, newWidth, numChannels];\r\n\r\n  let xData = backend.dataIdMap.get(images.dataId);\r\n  let castedData;\r\n  if (xData.dtype !== 'float32') {\r\n    castedData =\r\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\r\n    xData = backend.dataIdMap.get(castedData.dataId);\r\n  }\r\n  const xId = xData.id;\r\n\r\n  const out = backend.makeOutput(outShape, 'float32');\r\n  if (util.sizeFromShape(images.shape) === 0) {\r\n    return out;\r\n  }\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  wasmResizeBilinear(\r\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\r\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\r\n\r\n  if (castedData != null) {\r\n    backend.disposeData(castedData.dataId);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const resizeBilinearConfig: KernelConfig = {\r\n  kernelName: ResizeBilinear,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: resizeBilinear as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {identity} from './Identity';\r\nimport {reshape} from './Reshape';\r\n\r\nlet wasmReverse: (\r\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\r\n    outShapeLength: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\r\n    'number',  // x_id\r\n    'array',   // axes\r\n    'number',  // axes_length\r\n    'array',   // out_shape\r\n    'number',  // out_shape_length\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nexport function reverse(\r\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\r\n    TensorInfo {\r\n  const {inputs, backend, attrs} = args;\r\n  const {x} = inputs;\r\n  const {dims} = attrs;\r\n\r\n  const axes = util.parseAxisParam(dims, x.shape);\r\n\r\n  if (x.shape.length === 0) {\r\n    return identity({inputs: {x}, backend});\r\n  }\r\n\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\r\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n\r\n  wasmReverse(\r\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\r\n\r\n  const reshaped =\r\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\r\n\r\n  backend.disposeData(out.dataId);\r\n  return reshaped;\r\n}\r\n\r\nexport const reverseConfig: KernelConfig = {\r\n  kernelName: Reverse,\r\n  backendName: 'wasm',\r\n  kernelFunc: reverse as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\r\nimport {backend_util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmRotate: (\r\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\r\n    numChannels: number, radians: number, centerX: number, centerY: number,\r\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // batch\r\n    'number',  // imageHeight\r\n    'number',  // imageWidth\r\n    'number',  // numChannels\r\n    'number',  // radians\r\n    'number',  // centerX\r\n    'number',  // centerY\r\n    'array',   // fillBytes\r\n    'number',  // fillLength\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nexport function rotateWithOffset(args: {\r\n  inputs: RotateWithOffsetInputs,\r\n  backend: BackendWasm,\r\n  attrs: RotateWithOffsetAttrs\r\n}): TensorInfo {\r\n  const {inputs, backend, attrs} = args;\r\n  const {image} = inputs;\r\n  const {radians, fillValue, center} = attrs;\r\n\r\n  const out = backend.makeOutput(image.shape, image.dtype);\r\n  const imageId = backend.dataIdMap.get(image.dataId).id;\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\r\n\r\n  const [centerX, centerY] =\r\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\r\n\r\n  const fillIsBlack = fillValue === 0;\r\n  const fullOpacityValue = 255;\r\n\r\n  const fillValues = typeof fillValue === 'number' ?\r\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\r\n      [...fillValue, fullOpacityValue];\r\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\r\n\r\n  wasmRotate(\r\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\r\n      centerY, fillBytes, fillValues.length, outId);\r\n  return out;\r\n}\r\n\r\nexport const rotateWithOffsetConfig: KernelConfig = {\r\n  kernelName: RotateWithOffset,\r\n  backendName: 'wasm',\r\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\n\r\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmScatterNd: (\r\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\r\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\r\n    outputSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\r\n    'number',  // indicesId\r\n    'number',  // updatesId\r\n    'number',  // dtype\r\n    'number',  // sliceRank\r\n    'number',  // numUpdates\r\n    'number',  // sliceSize\r\n    'array',   // strides\r\n    'number',  // outputSize\r\n    'number'   // outId\r\n  ]);\r\n}\r\n\r\nfunction scatterNd(\r\n    args:\r\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {indices, updates} = inputs;\r\n  const {shape} = attrs;\r\n\r\n  const out = backend.makeOutput(shape, updates.dtype);\r\n  if (util.sizeFromShape(shape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\r\n      scatter_util.calculateShapes(updates, indices, shape);\r\n\r\n  const indicesData = backend.dataIdMap.get(indices.dataId);\r\n  const indicesId = indicesData.id;\r\n\r\n  const updatesData = backend.dataIdMap.get(updates.dataId);\r\n  const updatesId = updatesData.id;\r\n\r\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\r\n\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmScatterNd(\r\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\r\n      sliceSize, stridesBytes, outputSize, outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const scatterNdConfig: KernelConfig = {\r\n  kernelName: ScatterNd,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: scatterNd as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmSelect: (\r\n    conditionId: number, tId: number, eId: number, offset: number,\r\n    outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\r\n    'number',  // conditionId\r\n    'number',  // tId\r\n    'number',  // eId\r\n    'number',  // offset\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\r\n  const {inputs, backend} = args;\r\n  const {condition, t, e} = inputs;\r\n\r\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\r\n  const tId = backend.dataIdMap.get(t.dataId).id;\r\n  const eId = backend.dataIdMap.get(e.dataId).id;\r\n  const out = backend.makeOutput(t.shape, t.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const cRank = condition.shape.length;\r\n  const tRank = t.shape.length;\r\n\r\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\r\n      1 :\r\n      util.sizeFromShape(t.shape.slice(1));\r\n\r\n  wasmSelect(conditionId, tId, eId, offset, outId);\r\n  return out;\r\n}\r\n\r\nexport const selectConfig: KernelConfig = {\r\n  kernelName: Select,\r\n  backendName: 'wasm',\r\n  kernelFunc: select as {} as KernelFunc,\r\n  setupFunc: setup\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmFunc: (xId: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\r\n}\r\n\r\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\r\n    TensorInfo {\r\n  const {backend, inputs: {x}} = args;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  // Short-circuit zero-sized tensors.\r\n  if (util.sizeFromShape(out.shape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  wasmFunc(xId, outId);\r\n  return out;\r\n}\r\n\r\nexport const sigmoidConfig: KernelConfig = {\r\n  kernelName: 'Sigmoid',\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: sigmoid as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {sliceImplCPU} from '../kernel_utils/shared';\r\n\r\nexport function slice(\r\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\r\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\r\n\r\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\r\n\r\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\r\n  const xVals = backend.readSync(x.dataId);\r\n  const out = backend.makeOutput(size_, x.dtype);\r\n  const xStrides = util.computeStrides(x.shape);\r\n  const outData = backend.dataIdMap.get(out.dataId);\r\n\r\n  if (isContinous) {\r\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\r\n\r\n    if (x.dtype === 'string') {\r\n      outData.stringBytes =\r\n          (xVals as Uint8Array[])\r\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\r\n    } else {\r\n      const outVals = backend.typedArrayFromHeap(out);\r\n      outVals.set(\r\n          (xVals as TypedArray)\r\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  if (x.dtype === 'string') {\r\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\r\n    outData.stringBytes = res as Uint8Array[];\r\n    return out;\r\n  }\r\n\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  const rank = x.shape.length;\r\n  if (rank === 2) {\r\n    slice2d(\r\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\r\n        size_ as [number, number]);\r\n  } else if (rank === 3) {\r\n    slice3d(\r\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\r\n        begin_ as [number, number, number], size_ as [number, number, number]);\r\n  } else if (rank === 4) {\r\n    slice4d(\r\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\r\n        begin_ as [number, number, number, number],\r\n        size_ as [number, number, number, number]);\r\n  } else {\r\n    const res =\r\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\r\n    outVals.set(res);\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nfunction slice2d(\r\n    xVals: backend_util.TypedArray, xStride: number,\r\n    outVals: backend_util.TypedArray, begin: [number, number],\r\n    size: [number, number]): void {\r\n  let outOffset = 0;\r\n  const beginI = begin[0];\r\n  const beginJ = begin[1];\r\n  const endI = beginI + size[0];\r\n  for (let i = beginI; i < endI; i++) {\r\n    const xOffset = i * xStride + beginJ;\r\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\r\n    outOffset += size[1];\r\n  }\r\n}\r\n\r\nfunction slice3d(\r\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\r\n    outVals: backend_util.TypedArray, begin: [number, number, number],\r\n    size: [number, number, number]): void {\r\n  let outOffset = 0;\r\n  const beginI = begin[0];\r\n  const beginJ = begin[1];\r\n  const beginK = begin[2];\r\n  const endI = beginI + size[0];\r\n  const endJ = beginJ + size[1];\r\n  for (let i = beginI; i < endI; i++) {\r\n    for (let j = beginJ; j < endJ; j++) {\r\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\r\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\r\n      outOffset += size[2];\r\n    }\r\n  }\r\n}\r\n\r\nfunction slice4d(\r\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\r\n    xStride3: number, outVals: backend_util.TypedArray,\r\n    begin: [number, number, number, number],\r\n    size: [number, number, number, number]): void {\r\n  let outOffset = 0;\r\n  const beginI = begin[0];\r\n  const beginJ = begin[1];\r\n  const beginK = begin[2];\r\n  const endI = beginI + size[0];\r\n  const endJ = beginJ + size[1];\r\n  const endK = beginK + size[2];\r\n  const beginL = begin[3];\r\n\r\n  for (let i = beginI; i < endI; i++) {\r\n    for (let j = beginJ; j < endJ; j++) {\r\n      for (let k = beginK; k < endK; k++) {\r\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\r\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\r\n        outOffset += size[3];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const sliceConfig: KernelConfig = {\r\n  kernelName: Slice,\r\n  backendName: 'wasm',\r\n  kernelFunc: slice as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\r\n    void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\r\n    'number',  // xId\r\n    'number',  // outId\r\n    'number',  // channels\r\n    'number'   // batch\r\n  ]);\r\n}\r\n\r\nfunction softmax(\r\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\r\n  const xId = backend.dataIdMap.get(logits.dataId).id;\r\n  const out = backend.makeOutput(logits.shape, logits.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const channels = logits.shape[dim];\r\n  const batch = util.sizeFromShape(logits.shape) / channels;\r\n\r\n  // Short-circuit zero-sized tensors.\r\n  if (util.sizeFromShape(out.shape) === 0) {\r\n    return out;\r\n  }\r\n\r\n  wasmFunc(xId, outId, channels, batch);\r\n  return out;\r\n}\r\n\r\nexport const softmaxConfig: KernelConfig = {\r\n  kernelName: Softmax,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: softmax as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\r\nimport {backend_util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {slice} from './Slice';\r\n\r\nexport function splitV(\r\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\r\n  const {inputs, attrs, backend} = args;\r\n  const {x} = inputs;\r\n  const {numOrSizeSplits, axis} = attrs;\r\n\r\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\r\n\r\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\r\n  const begin = new Array(x.shape.length).fill(0);\r\n  const size = x.shape.slice();\r\n  return splitSizes.map(s => {\r\n    const xSliceSize = [...size];\r\n    xSliceSize[$axis] = s;\r\n    const xSlice =\r\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\r\n    begin[$axis] += s;\r\n    return xSlice;\r\n  });\r\n}\r\n\r\nexport const splitVConfig: KernelConfig = {\r\n  kernelName: SplitV,\r\n  backendName: 'wasm',\r\n  kernelFunc: splitV as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = true;\r\nexport const squaredDifferenceConfig: KernelConfig =\r\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmStep: (xId: number, alpha: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\r\n    'number',  // x_id\r\n    'number',  // alpha\r\n    'number',  // out_id\r\n  ]);\r\n}\r\n\r\nfunction step(\r\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {alpha} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmStep(xId, alpha, outId);\r\n  return out;\r\n}\r\n\r\nexport const stepConfig: KernelConfig = {\r\n  kernelName: Step,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: step as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {reshape} from './Reshape';\r\nimport {slice} from './Slice';\r\n\r\nlet wasmStridedSlice: (\r\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\r\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\r\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\r\n    outShapeLength: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\r\n    'number',  // xId\r\n    'array',   // xStrides\r\n    'number',  // xRank\r\n    'array',   // beginBytes\r\n    'array',   // endBytes\r\n    'array',   // stridesBytes\r\n    'array',   // outShapeBytes\r\n    'array',   // outStridesBytes\r\n    'number',  // outShapeLength\r\n    'number',  // outId\r\n  ]);\r\n}\r\n\r\nexport function stridedSlice(args: {\r\n  backend: BackendWasm,\r\n  inputs: StridedSliceInputs,\r\n  attrs: StridedSliceAttrs\r\n}): TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {x} = inputs;\r\n\r\n  let {begin, end, strides} = attrs;\r\n  if (strides == null) {\r\n    strides = new Array(begin.length);\r\n  }\r\n\r\n  const {beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask} = attrs;\r\n\r\n  const ellipsisAxes = backend_util.slice_util.maskToAxes(ellipsisMask);\r\n  if (ellipsisAxes.length > 1) {\r\n    throw new Error('Multiple ellipses in slice is not allowed.');\r\n  }\r\n\r\n  if (ellipsisMask !== 0 && newAxisMask !== 0) {\r\n    throw new Error(\r\n        'Using both ellipsisMask and newAxisMask is not yet supported.');\r\n  }\r\n\r\n  if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\r\n    throw new Error(\r\n        'Using both ellipsisMask and shrinkAxisMask is not yet supported.');\r\n  }\r\n\r\n  const numInterpolatedAxes = x.shape.length - begin.length;\r\n\r\n  // Expand the dims of x based on the newAxisMask.\r\n  const expandAxes = backend_util.slice_util.maskToAxes(newAxisMask);\r\n  const newShape = x.shape.slice();\r\n  expandAxes.forEach(axis => {\r\n    begin[axis] = 0;\r\n    end[axis] = 1;\r\n    newShape.splice(axis, 0, 1);\r\n  });\r\n\r\n  const xReshaped = reshape({inputs: {x}, attrs: {shape: newShape}, backend});\r\n\r\n  const {\r\n    begin: normalizedBegin,\r\n    end: normalizedEnd,\r\n    strides: normalizedStrides\r\n  } =\r\n      backend_util.slice_util.getNormalizedAxes(\r\n          xReshaped.shape, ellipsisAxes, numInterpolatedAxes, begin, end,\r\n          strides, beginMask, endMask, ellipsisMask);\r\n  begin = normalizedBegin;\r\n  end = normalizedEnd;\r\n  strides = normalizedStrides;\r\n\r\n  const shrinkAxes = backend_util.slice_util.maskToAxes(shrinkAxisMask);\r\n  // Adjust the ends based on the shrink mask.\r\n  shrinkAxes.forEach(axis => {\r\n    end[axis] = begin[axis] + 1;\r\n    strides[axis] = 1;\r\n  });\r\n\r\n  // Figure out the output shape.\r\n  const size = backend_util.slice_util.computeOutShape(begin, end, strides);\r\n  // Remove the axes based on shrinkMask.\r\n  const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\r\n\r\n  const nonStrided = strides.every(v => v === 1);\r\n  if (nonStrided) {\r\n    const xSliced = slice(\r\n        {inputs: {x: xReshaped}, attrs: {begin, size}, backend});\r\n    backend.disposeData(xReshaped.dataId);\r\n    const reshaped =\r\n        reshape({inputs: {x: xSliced}, attrs: {shape: outShape}, backend});\r\n    backend.disposeData(xSliced.dataId);\r\n    return reshaped;\r\n  }\r\n\r\n  const out = backend.makeOutput(outShape, 'float32');\r\n  if (!outShape.some(axis => axis === 0)) {\r\n    const xId = backend.dataIdMap.get(xReshaped.dataId).id;\r\n    const xStridesBytes = new Uint8Array(\r\n        new Int32Array(util.computeStrides(xReshaped.shape)).buffer);\r\n    const beginBytes = new Uint8Array(new Int32Array(begin).buffer);\r\n    const endBytes = new Uint8Array(new Int32Array(end).buffer);\r\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\r\n\r\n    const outputShapeBytes = new Uint8Array(new Int32Array(outShape).buffer);\r\n    const outStridesBytes =\r\n        new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n    wasmStridedSlice(\r\n        xId, xStridesBytes, xReshaped.shape.length, beginBytes, endBytes,\r\n        stridesBytes, outputShapeBytes, outStridesBytes, outShape.length,\r\n        outId);\r\n  }\r\n  backend.disposeData(xReshaped.dataId);\r\n\r\n  const reshaped =\r\n      reshape({inputs: {x: out}, attrs: {shape: outShape}, backend});\r\n\r\n  backend.disposeData(out.dataId);\r\n  return reshaped;\r\n}\r\n\r\nexport const stridedSliceConfig: KernelConfig = {\r\n  kernelName: StridedSlice,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: stridedSlice as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\r\nimport {createBinaryKernelConfig} from './binary_kernel';\r\nconst supportsFullBroadcast = true;\r\nexport const subConfig: KernelConfig =\r\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {permuteAxesAndTranspose} from './kernel_utils';\r\n\r\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number, number, number']);\r\n}\r\n\r\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {axis, keepDims} = attrs;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  let inputId = xId;\r\n  let input = x;\r\n\r\n  const {transposed, axes, originalAxes, inputWasTransposed} =\r\n      permuteAxesAndTranspose(x, axis, backend);\r\n\r\n  let reductionAxes = axes;\r\n  if (inputWasTransposed) {\r\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\r\n    if (transposedId !== xId) {\r\n      // transpose was not a no-op. We will need to dispose of this\r\n      // once we are done.\r\n      input = transposed;\r\n      inputId = transposedId;\r\n      reductionAxes = backend_util.getInnerMostAxes(\r\n          reductionAxes.length, input.shape.length);\r\n    }\r\n  }\r\n\r\n  backend_util.assertAxesAreInnerMostDims(\r\n      'sum', reductionAxes, input.shape.length);\r\n  const [outShape, reduceShape] =\r\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\r\n  const reduceSize = util.sizeFromShape(reduceShape);\r\n\r\n  const out = backend.makeOutput(outShape, input.dtype);\r\n  if (util.sizeFromShape(input.shape) !== 0) {\r\n    const outId = backend.dataIdMap.get(out.dataId).id;\r\n    wasmSum(inputId, reduceSize, outId);\r\n  }\r\n\r\n  if (inputWasTransposed) {\r\n    // dispose of the transposed tensor.\r\n    backend.disposeData(transposed.dataId);\r\n  }\r\n\r\n  if (keepDims) {\r\n    // reshape\r\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\r\n    out.shape = newShape;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport const sumConfig: KernelConfig = {\r\n  kernelName: Sum,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: sum as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\r\n\r\nimport {createUnaryKernelConfig} from './unary_kernel';\r\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {CppDType} from './types';\r\n\r\nlet wasmTile: (\r\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\r\n    newShapeSize: number, dtype: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\r\n    'number',  // x_id\r\n    'array',   // x_shape\r\n    'number',  // x_shape.length\r\n    'array',   // new_shape\r\n    'number',  // new_shape.length\r\n    'number'   // out_id\r\n  ]);\r\n}\r\n\r\nfunction tile(\r\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\r\n  const {inputs, backend, attrs} = args;\r\n  const {x} = inputs;\r\n  const xId = backend.dataIdMap.get(x.dataId).id;\r\n  const {reps} = attrs;\r\n\r\n  const newShape: number[] = new Array(x.shape.length);\r\n  for (let i = 0; i < newShape.length; i++) {\r\n    newShape[i] = x.shape[i] * reps[i];\r\n  }\r\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\r\n\r\n  const out = backend.makeOutput(newShape, x.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n  wasmTile(\r\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\r\n      CppDType[out.dtype], outId);\r\n  return out;\r\n}\r\n\r\nexport const tileConfig: KernelConfig = {\r\n  kernelName: Tile,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: tile as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\nimport {CppDType} from './types';\r\n\r\nlet wasmTopK: (\r\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\r\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\r\n    outIndicesId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm) {\r\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\r\n    'number',  // xId\r\n    'array',   // x.shape\r\n    'number',  // x.shape.length\r\n    'number',  // x.dtype\r\n    'number',  // k\r\n    'bool',    // sorted\r\n    'number',  // outValuesId\r\n    'number',  // outIndicesId\r\n  ]);\r\n}\r\n\r\nexport const topk:\r\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\r\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\r\n          const {x} = inputs;\r\n          const {k, sorted} = attrs;\r\n\r\n          const xId = backend.dataIdMap.get(x.dataId).id;\r\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\r\n          const outputShape = x.shape.slice();\r\n          outputShape[outputShape.length - 1] = k;\r\n          const outValues = backend.makeOutput(outputShape, x.dtype);\r\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\r\n          const outIndices = backend.makeOutput(outputShape, 'int32');\r\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\r\n\r\n          wasmTopK(\r\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\r\n              outValuesId, outIndicesId);\r\n\r\n          return [outValues, outIndices];\r\n        };\r\n\r\nexport const topKConfig: KernelConfig = {\r\n  kernelName: TopK,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: topk as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nlet wasmTransform: (\r\n    imageId: number, transformsId: number, isBatchTransform: boolean,\r\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\r\n    imageWidth: number, imageHeight: number, strides: Uint8Array,\r\n    stridesLength: number, interpolationModeId: number, fillModeId: number,\r\n    fillValue: number, outId: number) => void;\r\n\r\nfunction setup(backend: BackendWasm): void {\r\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\r\n    'number',  // imageId\r\n    'number',  // transformsId\r\n    'bool',    // isBatchTransform\r\n    'number',  // batch\r\n    'number',  // outHeight\r\n    'number',  // outWidth\r\n    'number',  // numChannels\r\n    'number',  // imageWidth\r\n    'number',  // imageHeight\r\n    'array',   // strides\r\n    'number',  // stridesLength\r\n    'number',  // interpolationModeId\r\n    'number',  // fillModeId\r\n    'number',  // fillValue\r\n    'number'   // outId\r\n  ]);\r\n}\r\n\r\nfunction transform(\r\n    args:\r\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\r\n    TensorInfo {\r\n  const {backend, inputs, attrs} = args;\r\n  const {image, transforms} = inputs;\r\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\r\n\r\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\r\n  const [outHeight, outWidth] =\r\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\r\n  const outShape =\r\n      [batch, outHeight, outWidth,\r\n       numChannels] as [number, number, number, number];\r\n  const strides =\r\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\r\n\r\n  const out = backend.makeOutput(outShape, image.dtype);\r\n  const outId = backend.dataIdMap.get(out.dataId).id;\r\n\r\n  const imageData = backend.dataIdMap.get(image.dataId);\r\n  const imageId = imageData.id;\r\n\r\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\r\n  const transformsId = transformsData.id;\r\n\r\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\r\n  let fillModeId;\r\n  switch (fillMode) {\r\n    case 'constant':\r\n      fillModeId = 1;\r\n      break;\r\n    case 'reflect':\r\n      fillModeId = 2;\r\n      break;\r\n    case 'wrap':\r\n      fillModeId = 3;\r\n      break;\r\n    case 'nearest':\r\n      fillModeId = 4;\r\n      break;\r\n    default:\r\n      fillModeId = 1;\r\n      break;\r\n  }\r\n\r\n  wasmTransform(\r\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\r\n      outWidth, numChannels, imageWidth, imageHeight, strides,\r\n      image.shape.length - 1, interpolationModeId, fillModeId, fillValue,\r\n      outId);\r\n\r\n  return out;\r\n}\r\n\r\nexport const transformConfig: KernelConfig = {\r\n  kernelName: Transform,\r\n  backendName: 'wasm',\r\n  setupFunc: setup,\r\n  kernelFunc: transform as {} as KernelFunc\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nimport {slice} from './Slice';\r\n\r\nfunction unpack(\r\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\r\n    TensorInfo[] {\r\n  const {inputs, backend, attrs} = args;\r\n  const {value} = inputs;\r\n  let {axis} = attrs;\r\n\r\n  if (axis < 0) {\r\n    axis += value.shape.length;\r\n  }\r\n\r\n  const numOutputs = value.shape[axis];\r\n  const rank = value.shape.length;\r\n  const outShape: number[] = new Array(rank - 1);\r\n  let outIndex = 0;\r\n  for (let i = 0; i < rank; i++) {\r\n    if (i !== axis) {\r\n      outShape[outIndex++] = value.shape[i];\r\n    }\r\n  }\r\n  const outs: TensorInfo[] = new Array(numOutputs);\r\n  const begin = new Array(rank).fill(0);\r\n  const size = value.shape.slice();\r\n  size[axis] = 1;\r\n  for (let i = 0; i < outs.length; i++) {\r\n    begin[axis] = i;\r\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\r\n  }\r\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\r\n}\r\n\r\nexport const unpackConfig: KernelConfig = {\r\n  kernelName: Unpack,\r\n  backendName: 'wasm',\r\n  kernelFunc: unpack as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm} from '../backend_wasm';\r\n\r\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\r\n  const {inputs: {x}, backend} = args;\r\n  const out = backend.makeOutput(x.shape, x.dtype);\r\n  const outVals = backend.typedArrayFromHeap(out);\r\n  outVals.fill(0);\r\n  return out;\r\n}\r\n\r\nexport const zerosLikeConfig: KernelConfig = {\r\n  kernelName: ZerosLike,\r\n  backendName: 'wasm',\r\n  kernelFunc: zerosLike as {} as KernelFunc,\r\n};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n// We explicitly import the modular kernels so they get registered in the\r\n// global registry when we compile the library. A modular build would replace\r\n// the contents of this file and import only the kernels that are needed.\r\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\r\n\r\nimport {fusedMatMulConfig} from './kernels/_FusedMatMul';\r\nimport {absConfig} from './kernels/Abs';\r\nimport {addConfig} from './kernels/Add';\r\nimport {addNConfig} from './kernels/AddN';\r\nimport {allConfig} from './kernels/All';\r\nimport {anyConfig} from './kernels/Any';\r\nimport {argMaxConfig} from './kernels/ArgMax';\r\nimport {avgPoolConfig} from './kernels/AvgPool';\r\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\r\nimport {castConfig} from './kernels/Cast';\r\nimport {ceilConfig} from './kernels/Ceil';\r\nimport {clipByValueConfig} from './kernels/ClipByValue';\r\nimport {concatConfig} from './kernels/Concat';\r\nimport {conv2DConfig} from './kernels/Conv2D';\r\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\r\nimport {cosConfig} from './kernels/Cos';\r\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\r\nimport {cumsumConfig} from './kernels/Cumsum';\r\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\r\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\r\nimport {equalConfig} from './kernels/Equal';\r\nimport {expConfig} from './kernels/Exp';\r\nimport {expandDimsConfig} from './kernels/ExpandDims';\r\nimport {fillConfig} from './kernels/Fill';\r\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\r\nimport {floorConfig} from './kernels/Floor';\r\nimport {floorDivConfig} from './kernels/FloorDiv';\r\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\r\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\r\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\r\nimport {gatherNdConfig} from './kernels/GatherNd';\r\nimport {gatherV2Config} from './kernels/GatherV2';\r\nimport {greaterConfig} from './kernels/Greater';\r\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\r\nimport {identityConfig} from './kernels/Identity';\r\nimport {leakyReluConfig} from './kernels/LeakyRelu';\r\nimport {lessConfig} from './kernels/Less';\r\nimport {lessEqualConfig} from './kernels/LessEqual';\r\nimport {logConfig} from './kernels/Log';\r\nimport {logicalAndConfig} from './kernels/LogicalAnd';\r\nimport {maxConfig} from './kernels/Max';\r\nimport {maximumConfig} from './kernels/Maximum';\r\nimport {maxPoolConfig} from './kernels/MaxPool';\r\nimport {meanConfig} from './kernels/Mean';\r\nimport {minConfig} from './kernels/Min';\r\nimport {minimumConfig} from './kernels/Minimum';\r\nimport {mirrorPadConfig} from './kernels/MirrorPad';\r\nimport {multiplyConfig} from './kernels/Multiply';\r\nimport {negConfig} from './kernels/Neg';\r\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\r\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\r\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\r\nimport {notEqualConfig} from './kernels/NotEqual';\r\nimport {oneHotConfig} from './kernels/OneHot';\r\nimport {onesLikeConfig} from './kernels/OnesLike';\r\nimport {packConfig} from './kernels/Pack';\r\nimport {padV2Config} from './kernels/PadV2';\r\nimport {powConfig} from './kernels/Pow';\r\nimport {preluConfig} from './kernels/Prelu';\r\nimport {prodConfig} from './kernels/Prod';\r\nimport {rangeConfig} from './kernels/Range';\r\nimport {realDivConfig} from './kernels/RealDiv';\r\nimport {reluConfig} from './kernels/Relu';\r\nimport {relu6Config} from './kernels/Relu6';\r\nimport {reshapeConfig} from './kernels/Reshape';\r\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\r\nimport {reverseConfig} from './kernels/Reverse';\r\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\r\nimport {roundConfig} from './kernels/Round';\r\nimport {rsqrtConfig} from './kernels/Rsqrt';\r\nimport {scatterNdConfig} from './kernels/ScatterNd';\r\nimport {selectConfig} from './kernels/Select';\r\nimport {sigmoidConfig} from './kernels/Sigmoid';\r\nimport {sinConfig} from './kernels/Sin';\r\nimport {sliceConfig} from './kernels/Slice';\r\nimport {softmaxConfig} from './kernels/Softmax';\r\nimport {splitVConfig} from './kernels/SplitV';\r\nimport {sqrtConfig} from './kernels/Sqrt';\r\nimport {squareConfig} from './kernels/Square';\r\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\r\nimport {stepConfig} from './kernels/Step';\r\nimport {stridedSliceConfig} from './kernels/StridedSlice';\r\nimport {subConfig} from './kernels/Sub';\r\nimport {sumConfig} from './kernels/Sum';\r\nimport {tanConfig} from './kernels/Tan';\r\nimport {tanhConfig} from './kernels/Tanh';\r\nimport {tileConfig} from './kernels/Tile';\r\nimport {topKConfig} from './kernels/TopK';\r\nimport {transformConfig} from './kernels/Transform';\r\nimport {transposeConfig} from './kernels/Transpose';\r\nimport {unpackConfig} from './kernels/Unpack';\r\nimport {zerosLikeConfig} from './kernels/ZerosLike';\r\n\r\n// List all kernel configs here\r\nconst kernelConfigs: KernelConfig[] = [\r\n  absConfig,\r\n  addConfig,\r\n  addNConfig,\r\n  allConfig,\r\n  anyConfig,\r\n  argMaxConfig,\r\n  avgPoolConfig,\r\n  batchMatMulConfig,\r\n  castConfig,\r\n  ceilConfig,\r\n  clipByValueConfig,\r\n  concatConfig,\r\n  conv2DConfig,\r\n  conv2DBackpropInputConfig,\r\n  cosConfig,\r\n  cropAndResizeConfig,\r\n  cumsumConfig,\r\n  depthToSpaceConfig,\r\n  depthwiseConv2dNativeConfig,\r\n  equalConfig,\r\n  expConfig,\r\n  expandDimsConfig,\r\n  fillConfig,\r\n  flipLeftRightConfig,\r\n  floorConfig,\r\n  floorDivConfig,\r\n  fusedMatMulConfig,\r\n  fusedBatchNormConfig,\r\n  fusedConv2DConfig,\r\n  fusedDepthwiseConv2DConfig,\r\n  gatherNdConfig,\r\n  gatherV2Config,\r\n  greaterConfig,\r\n  greaterEqualConfig,\r\n  identityConfig,\r\n  leakyReluConfig,\r\n  lessConfig,\r\n  lessEqualConfig,\r\n  logConfig,\r\n  logicalAndConfig,\r\n  maxConfig,\r\n  maximumConfig,\r\n  maxPoolConfig,\r\n  meanConfig,\r\n  minConfig,\r\n  minimumConfig,\r\n  mirrorPadConfig,\r\n  multiplyConfig,\r\n  negConfig,\r\n  nonMaxSuppressionV3Config,\r\n  nonMaxSuppressionV4Config,\r\n  nonMaxSuppressionV5Config,\r\n  notEqualConfig,\r\n  oneHotConfig,\r\n  onesLikeConfig,\r\n  packConfig,\r\n  padV2Config,\r\n  powConfig,\r\n  preluConfig,\r\n  prodConfig,\r\n  rangeConfig,\r\n  realDivConfig,\r\n  reluConfig,\r\n  relu6Config,\r\n  reshapeConfig,\r\n  resizeBilinearConfig,\r\n  reverseConfig,\r\n  rotateWithOffsetConfig,\r\n  rsqrtConfig,\r\n  roundConfig,\r\n  scatterNdConfig,\r\n  selectConfig,\r\n  sigmoidConfig,\r\n  sinConfig,\r\n  sliceConfig,\r\n  softmaxConfig,\r\n  splitVConfig,\r\n  sqrtConfig,\r\n  squareConfig,\r\n  squaredDifferenceConfig,\r\n  stepConfig,\r\n  stridedSliceConfig,\r\n  subConfig,\r\n  sumConfig,\r\n  tanConfig,\r\n  tanhConfig,\r\n  tileConfig,\r\n  topKConfig,\r\n  transformConfig,\r\n  transposeConfig,\r\n  unpackConfig,\r\n  zerosLikeConfig\r\n];\r\n\r\nfor (const kernelConfig of kernelConfigs) {\r\n  registerKernel(kernelConfig);\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {env} from '@tensorflow/tfjs-core';\r\n\r\nconst ENV = env();\r\n\r\n/**\r\n * True if SIMD is supported.\r\n */\r\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\r\nENV.registerFlag(\r\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\r\n    // code. In this case it is a small program that contains SIMD\r\n    // instructions.\r\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\r\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\r\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\r\n    ])));\r\n\r\n/**\r\n * True if threads are supported.\r\n */\r\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\r\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\r\n  // TODO(annxingyuan): Enable node support once this is resolved:\r\n  // https://github.com/tensorflow/tfjs/issues/3830\r\n  if (ENV.get('IS_NODE')) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    // Test for transferability of SABs (needed for Firefox)\r\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\r\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\r\n    // This typed array is a WebAssembly program containing threaded\r\n    // instructions.\r\n    return WebAssembly.validate(new Uint8Array([\r\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\r\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\r\n    ]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n});\r\n","\nvar WasmBackendModuleThreadedSimd = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};var nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(ENVIRONMENT_IS_NODE){read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret}}else{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var str=\"\";while(!(idx>=endIdx)){var u0=heap[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;if(!ENVIRONMENT_IS_PTHREAD)__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function preMain(){if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){assert(!ENVIRONMENT_IS_PTHREAD,\"addRunDependency cannot be used in a pthread worker\");runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(ENVIRONMENT_IS_PTHREAD)console.error(\"Pthread aborting at \"+(new Error).stack);what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmTable=Module[\"asm\"][\"F\"];wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={9816:function(){throw\"Canceled!\"},9834:function($0,$1){setTimeout(function(){__emscripten_do_dispatch_to_thread($0,$1)},0)}};function initPthreadsJS(){PThread.initRuntime()}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_futex_wake(addr,count){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0||count<0)return-28;if(count==0)return 0;if(count>=2147483647)count=Infinity;var mainThreadWaitAddress=Atomics.load(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2);var mainThreadWoken=0;if(mainThreadWaitAddress==addr){var loadedAddr=Atomics.compareExchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,mainThreadWaitAddress,0);if(loadedAddr==mainThreadWaitAddress){--count;mainThreadWoken=1;if(count<=0)return 1}}var ret=Atomics.notify(GROWABLE_HEAP_I32(),addr>>2,count);if(ret>=0)return ret+mainThreadWoken;throw\"Atomics.notify returned an unexpected value \"+ret}Module[\"_emscripten_futex_wake\"]=_emscripten_futex_wake;function killThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in killThread!\";GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var pthread=PThread.pthreads[pthread_ptr];pthread.worker.terminate();PThread.freeThreadData(pthread);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cancelThread!\";var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}var PThread={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){var pthreadPoolSize=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2));for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initRuntime:function(){var tb=_malloc(228);for(var i=0;i<228/4;++i)GROWABLE_HEAP_U32()[tb/4+i]=0;GROWABLE_HEAP_I32()[tb+12>>2]=tb;var headPtr=tb+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var tlsMemory=_malloc(512);for(var i=0;i<128;++i)GROWABLE_HEAP_U32()[tlsMemory/4+i]=0;Atomics.store(GROWABLE_HEAP_U32(),tb+100>>2,tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tb+40>>2,tb);__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1);_emscripten_register_main_browser_thread_id(tb)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){while(PThread.threadExitHandlers.length>0){PThread.threadExitHandlers.pop()()}if(ENVIRONMENT_IS_PTHREAD&&_pthread_self())___pthread_tsd_run_dtors()},runExitHandlersAndDeinitThread:function(tb,exitCode){Atomics.store(GROWABLE_HEAP_U32(),tb+56>>2,1);Atomics.store(GROWABLE_HEAP_U32(),tb+60>>2,0);PThread.runExitHandlers();Atomics.store(GROWABLE_HEAP_U32(),tb+4>>2,exitCode);Atomics.store(GROWABLE_HEAP_U32(),tb+0>>2,1);_emscripten_futex_wake(tb+0,2147483647);__emscripten_thread_init(0,0,0)},threadExit:function(exitCode){var tb=_pthread_self();if(tb){PThread.runExitHandlersAndDeinitThread(tb,exitCode);if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exit\"})}}},threadCancel:function(){PThread.runExitHandlersAndDeinitThread(_pthread_self(),-1);postMessage({\"cmd\":\"cancelDone\"})},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}PThread.pthreads={};for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[];for(var i=0;i<PThread.runningWorkers.length;++i){var worker=PThread.runningWorkers[i];var pthread=worker.pthread;PThread.freeThreadData(pthread);worker.terminate()}PThread.runningWorkers=[]},freeThreadData:function(pthread){if(!pthread)return;if(pthread.threadInfoStruct){var tlsMemory=GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2];GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2]=0;_free(tlsMemory);_free(pthread.threadInfoStruct)}pthread.threadInfoStruct=0;if(pthread.allocatedOwnStack&&pthread.stackBase)_free(pthread.stackBase);pthread.stackBase=0;if(pthread.worker)pthread.worker.pthread=null},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);PThread.freeThreadData(worker.pthread);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=function(e){var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(e.data,d[\"transferList\"])}else{console.error('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(e.data)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"exit\"){var detached=worker.pthread&&Atomics.load(GROWABLE_HEAP_U32(),worker.pthread.threadInfoStruct+64>>2);if(detached){PThread.returnWorkerToPool(worker)}}else if(cmd===\"exitProcess\"){try{exit(d[\"returnCode\"])}catch(e){if(e instanceof ExitStatus)return;throw e}}else if(cmd===\"cancelDone\"){PThread.returnWorkerToPool(worker)}else if(cmd===\"objectTransfer\"){PThread.receiveObjectTransfer(e.data)}else if(e.data.target===\"setimmediate\"){worker.postMessage(e.data)}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=function(e){err(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(data){worker.onerror(data)});worker.on(\"exit\",function(data){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}if(PThread.unusedWorkers.length>0)return PThread.unusedWorkers.pop();else return null},busySpinWait:function(msecs){var t=performance.now()+msecs;while(performance.now()<t){}}};function establishStackSpace(stackTop,stackMax){_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function getNoExitRuntime(){return noExitRuntime}Module[\"getNoExitRuntime\"]=getNoExitRuntime;function invokeEntryPoint(ptr,arg){return wasmTable.get(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___call_main(argc,argv){var returnCode=_main(argc,argv)}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=function(){return performance.now()-Module[\"__performance_now_clock_drift\"]}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else _emscripten_get_now=function(){return performance.now()};function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _atexit(func,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,func,arg)}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort()}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_conditional_set_current_thread_status(expectedStatus,newStatus){}function _emscripten_futex_wait(addr,val,timeout){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0)return-28;if(!ENVIRONMENT_IS_WEB){var ret=Atomics.wait(GROWABLE_HEAP_I32(),addr>>2,val,timeout);if(ret===\"timed-out\")return-73;if(ret===\"not-equal\")return-6;if(ret===\"ok\")return 0;throw\"Atomics.wait returned an unexpected value \"+ret}else{if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}var tNow=performance.now();var tEnd=tNow+timeout;var lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr);while(1){tNow=performance.now();if(tNow>tEnd){lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);return-73}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);if(lastAddr==0){break}_emscripten_main_thread_process_queued_calls();if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr)}return 0}}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var stack=stackSave();var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=arguments[2+i];GROWABLE_HEAP_F64()[b+i]=arg}var ret=_emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync);stackRestore(stack);return ret}var _emscripten_receive_on_main_thread_js_callArgs=[];var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=GROWABLE_HEAP_U8()[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?GROWABLE_HEAP_F64()[buf++>>1]:GROWABLE_HEAP_I32()[buf]);++buf}return readAsmConstArgsArray}function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function _emscripten_get_heap_size(){return GROWABLE_HEAP_U8().length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();if(requestedSize<=oldSize){return false}var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){var stackTop=stackSave();var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;__emscripten_call_on_thread(0,targetThread,637534208,eventHandlerFunc,eventData,varargs);stackRestore(stackTop)},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){var stackTop=stackSave();var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;__emscripten_call_on_thread(0,targetThread,657457152,0,targetCanvasPtr,varargs);stackRestore(stackTop)}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_set_current_thread_status(newStatus){}function _emscripten_set_thread_name(threadId,name){}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(ext.indexOf(\"lose_context\")<0&&ext.indexOf(\"debug\")<0){GLctx.getExtension(ext)}})},populateUniformTable:function(program){var p=GL.programs[program];var ptable=GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,35718);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.slice(-1)==\"]\"){name=name.slice(0,name.lastIndexOf(\"[\"))}var loc=GLctx.getUniformLocation(p,name);if(loc){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _pthread_cleanup_pop(execute){var routine=PThread.threadExitHandlers.pop();if(execute)routine()}function _pthread_cleanup_push(routine,arg){PThread.threadExitHandlers.push(function(){wasmTable.get(routine)(arg)})}function spawnThread(threadParams){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var worker=PThread.getNewWorker();if(worker.pthread!==undefined)throw\"Internal error!\";if(!threadParams.pthread_ptr)throw\"Internal error, no pthread ptr!\";PThread.runningWorkers.push(worker);var tlsMemory=_malloc(128*4);for(var i=0;i<128;++i){GROWABLE_HEAP_I32()[tlsMemory+i*4>>2]=0}var stackHigh=threadParams.stackBase+threadParams.stackSize;var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,stackBase:threadParams.stackBase,stackSize:threadParams.stackSize,allocatedOwnStack:threadParams.allocatedOwnStack,threadInfoStruct:threadParams.pthread_ptr};var tis=pthread.threadInfoStruct>>2;Atomics.store(GROWABLE_HEAP_U32(),tis+(64>>2),threadParams.detached);Atomics.store(GROWABLE_HEAP_U32(),tis+(100>>2),tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tis+(40>>2),pthread.threadInfoStruct);Atomics.store(GROWABLE_HEAP_U32(),tis+(80>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(76>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+8>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+12>>2),threadParams.detached);var global_libc=_emscripten_get_global_libc();var global_locale=global_libc+40;Atomics.store(GROWABLE_HEAP_U32(),tis+(172>>2),global_locale);worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr,\"stackBase\":threadParams.stackBase,\"stackSize\":threadParams.stackSize};worker.runPthread=function(){msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)};if(worker.loaded){worker.runPthread();delete worker.runPthread}}function _pthread_create(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}if(!pthread_ptr){err(\"pthread_create called with a null thread pointer!\");return 28}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var stackSize=0;var stackBase=0;var detached=0;if(attr&&attr!=-1){stackSize=GROWABLE_HEAP_I32()[attr>>2];stackSize+=81920;stackBase=GROWABLE_HEAP_I32()[attr+8>>2];detached=GROWABLE_HEAP_I32()[attr+12>>2]!==0}else{stackSize=2097152}var allocatedOwnStack=stackBase==0;if(allocatedOwnStack){stackBase=_memalign(16,stackSize)}else{stackBase-=stackSize;assert(stackBase>0)}var threadInfoStruct=_malloc(228);for(var i=0;i<228>>2;++i)GROWABLE_HEAP_U32()[(threadInfoStruct>>2)+i]=0;GROWABLE_HEAP_I32()[pthread_ptr>>2]=threadInfoStruct;GROWABLE_HEAP_I32()[threadInfoStruct+12>>2]=threadInfoStruct;var headPtr=threadInfoStruct+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var threadParams={stackBase:stackBase,stackSize:stackSize,allocatedOwnStack:allocatedOwnStack,detached:detached,startRoutine:start_routine,pthread_ptr:threadInfoStruct,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList)}else{spawnThread(threadParams)}return 0}function _sysconf(name){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,name);switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}if(!ENVIRONMENT_IS_PTHREAD)PThread.initMainThreadBlock();var GLctx;var proxiedFunctionTable=[null,_atexit,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write,_sysconf];var asmLibraryArg={\"e\":___assert_fail,\"r\":___call_main,\"x\":__emscripten_notify_thread_queue,\"b\":_abort,\"y\":_emscripten_asm_const_int,\"j\":_emscripten_conditional_set_current_thread_status,\"c\":_emscripten_futex_wait,\"d\":_emscripten_futex_wake,\"f\":_emscripten_get_now,\"p\":_emscripten_memcpy_big,\"z\":_emscripten_num_logical_cores,\"u\":_emscripten_receive_on_main_thread_js,\"q\":_emscripten_resize_heap,\"v\":_emscripten_set_canvas_element_size,\"i\":_emscripten_set_current_thread_status,\"t\":_emscripten_set_thread_name,\"w\":_emscripten_webgl_create_context,\"m\":_fd_close,\"n\":_fd_seek,\"g\":_fd_write,\"o\":initPthreadsJS,\"a\":wasmMemory||Module[\"wasmMemory\"],\"k\":_pthread_cleanup_pop,\"l\":_pthread_cleanup_push,\"h\":_pthread_create,\"s\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=function(){return(_emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var ___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=function(){return(___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=function(){return(_emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var __emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=function(){return(__emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var __emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=function(){return(__emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"wb\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=9808;var __emscripten_main_thread_futex=Module[\"__emscripten_main_thread_futex\"]=11432;Module[\"cwrap\"]=cwrap;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&noExitRuntime&&status===0){return}if(!implicit){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exitProcess\",\"returnCode\":status});throw new ExitStatus(status)}else{}}if(noExitRuntime){}else{PThread.terminateAllThreads();EXITSTATUS=status;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}if(ENVIRONMENT_IS_PTHREAD){noExitRuntime=false;PThread.initWorker()}run();\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","export const wasmWorkerContents = 'var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;this.alert=threadAlert;Module[\"instantiateWasm\"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);Module[\"wasmModule\"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd===\"objectTransfer\"){Module[\"PThread\"].receiveObjectTransfer(e.data)}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module[\"establishStackSpace\"](top,max);Module[\"_emscripten_tls_init\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].setThreadStatus(Module[\"_pthread_self\"](),1);try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(!Module[\"getNoExitRuntime\"]())Module[\"PThread\"].threadExit(result)}catch(ex){if(ex===\"Canceled!\"){Module[\"PThread\"].threadCancel()}else if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"getNoExitRuntime\"]()){}else{Module[\"PThread\"].threadExit(ex.status)}}else{Module[\"PThread\"].threadExit(-2);throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"PThread\"].threadCancel()}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require(\"worker_threads\");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var nodeFS=require(\"fs\");var nodeRead=function(filename){return nodeFS.readFileSync(filename,\"utf8\")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance===\"undefined\"){performance={now:function(){return Date.now()}}}}';","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"i\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"o\"];removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _pthread_create(){return 6}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function _sysconf(name){switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"b\":_fd_write,\"g\":_pthread_create,\"h\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport './flags_wasm';\r\n\r\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\r\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\r\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\r\n// @ts-ignore\r\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\r\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\r\n\r\ninterface TensorData {\r\n  id: number;\r\n  memoryOffset: number;\r\n  shape: number[];\r\n  dtype: DataType;\r\n  refCount: number;\r\n  /** Only used for string tensors, storing encoded bytes. */\r\n  stringBytes?: Uint8Array[];\r\n}\r\n\r\nexport type DataId = object;  // object instead of {} to force non-primitive.\r\n\r\nexport class BackendWasm extends KernelBackend {\r\n  // 0 is reserved for null data ids.\r\n  private dataIdNextNumber = 1;\r\n  dataIdMap: DataStorage<TensorData>;\r\n\r\n  constructor(public wasm: BackendWasmModule | BackendWasmThreadedSimdModule) {\r\n    super();\r\n    this.wasm.tfjs.init();\r\n    this.dataIdMap = new DataStorage(this, engine());\r\n  }\r\n\r\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\r\n      DataId {\r\n    const dataId = {id: this.dataIdNextNumber++};\r\n    this.move(dataId, values, shape, dtype, 1);\r\n    return dataId;\r\n  }\r\n\r\n  numDataIds(): number {\r\n    return this.dataIdMap.numDataIds();\r\n  }\r\n\r\n  async time(f: () => void): Promise<BackendTimingInfo> {\r\n    const start = util.now();\r\n    f();\r\n    const kernelMs = util.now() - start;\r\n    return {kernelMs};\r\n  }\r\n\r\n  move(\r\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\r\n      dtype: DataType, refCount: number): void {\r\n    const id = this.dataIdNextNumber++;\r\n    if (dtype === 'string') {\r\n      const stringBytes = values as Uint8Array[];\r\n      this.dataIdMap.set(\r\n          dataId,\r\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\r\n      return;\r\n    }\r\n\r\n    const size = util.sizeFromShape(shape);\r\n    const numBytes = size * util.bytesPerElement(dtype);\r\n    const memoryOffset = this.wasm._malloc(numBytes);\r\n\r\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\r\n\r\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\r\n\r\n    if (values != null) {\r\n      this.wasm.HEAPU8.set(\r\n          new Uint8Array(\r\n              (values as backend_util.TypedArray).buffer,\r\n              (values as backend_util.TypedArray).byteOffset, numBytes),\r\n          memoryOffset);\r\n    }\r\n  }\r\n\r\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\r\n    return this.readSync(dataId);\r\n  }\r\n\r\n  readSync(dataId: DataId): backend_util.BackendValues {\r\n    const {memoryOffset, dtype, shape, stringBytes} =\r\n        this.dataIdMap.get(dataId);\r\n    if (dtype === 'string') {\r\n      return stringBytes;\r\n    }\r\n    const bytes = this.wasm.HEAPU8.slice(\r\n        memoryOffset,\r\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\r\n    return typedArrayFromBuffer(bytes.buffer, dtype);\r\n  }\r\n\r\n  /**\r\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\r\n   * is released, false otherwise.\r\n   * @param dataId\r\n   * @oaram force Optional, remove the data regardless of refCount\r\n   */\r\n  disposeData(dataId: DataId, force = false): boolean {\r\n    if (this.dataIdMap.has(dataId)) {\r\n      const data = this.dataIdMap.get(dataId);\r\n      data.refCount--;\r\n      if (!force && data.refCount > 0) {\r\n        return false;\r\n      }\r\n\r\n      this.wasm._free(data.memoryOffset);\r\n      this.wasm.tfjs.disposeData(data.id);\r\n      this.dataIdMap.delete(dataId);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** Return refCount of a `TensorData`. */\r\n  refCount(dataId: DataId): number {\r\n    if (this.dataIdMap.has(dataId)) {\r\n      const tensorData = this.dataIdMap.get(dataId);\r\n      return tensorData.refCount;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  incRef(dataId: DataId) {\r\n    const data = this.dataIdMap.get(dataId);\r\n    if (data != null) {\r\n      data.refCount++;\r\n    }\r\n  }\r\n\r\n  floatPrecision(): 32 {\r\n    return 32;\r\n  }\r\n\r\n  // Returns the memory offset of a tensor. Useful for debugging and unit\r\n  // testing.\r\n  getMemoryOffset(dataId: DataId): number {\r\n    return this.dataIdMap.get(dataId).memoryOffset;\r\n  }\r\n\r\n  dispose() {\r\n    this.wasm.tfjs.dispose();\r\n    if ('PThread' in this.wasm) {\r\n      this.wasm.PThread.terminateAllThreads();\r\n    }\r\n    this.wasm = null;\r\n  }\r\n\r\n  memory() {\r\n    return {unreliable: false};\r\n  }\r\n\r\n  /**\r\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\r\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\r\n   * is present, the memory was allocated elsewhere (in c++) and we just record\r\n   * the pointer where that memory lives.\r\n   */\r\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\r\n      TensorInfo {\r\n    let dataId: {};\r\n    if (memoryOffset == null) {\r\n      dataId = this.write(null /* values */, shape, dtype);\r\n    } else {\r\n      const id = this.dataIdNextNumber++;\r\n      dataId = {id};\r\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\r\n      const size = util.sizeFromShape(shape);\r\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\r\n    }\r\n    return {dataId, shape, dtype};\r\n  }\r\n\r\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\r\n      backend_util.TypedArray {\r\n    const buffer = this.wasm.HEAPU8.buffer;\r\n    const {memoryOffset} = this.dataIdMap.get(dataId);\r\n    const size = util.sizeFromShape(shape);\r\n    switch (dtype) {\r\n      case 'float32':\r\n        return new Float32Array(buffer, memoryOffset, size);\r\n      case 'int32':\r\n        return new Int32Array(buffer, memoryOffset, size);\r\n      case 'bool':\r\n        return new Uint8Array(buffer, memoryOffset, size);\r\n      default:\r\n        throw new Error(`Unknown dtype ${dtype}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createInstantiateWasmFunc(path: string) {\r\n  // this will be replace by rollup plugin patchWechatWebAssembly in minprogram's output\r\n  // and the rest code will be remove by treeshaking\r\n  // tslint:disable-next-line:no-any\r\n  return (imports: any, callback: any) => {\r\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\r\n      if (!response['ok']) {\r\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\r\n      }\r\n      response.arrayBuffer().then(binary => {\r\n        WebAssembly.instantiate(binary, imports).then(output => {\r\n          callback(output.instance, output.module);\r\n        });\r\n      });\r\n    });\r\n    return {};\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the path of the WASM binary.\r\n * @param simdSupported whether SIMD is supported\r\n * @param threadsSupported whether multithreading is supported\r\n * @param wasmModuleFolder the directory containing the WASM binaries.\r\n */\r\nfunction getPathToWasmBinary(\r\n    simdSupported: boolean, threadsSupported: boolean,\r\n    wasmModuleFolder: string) {\r\n  if (wasmPath != null) {\r\n    // If wasmPath is defined, the user has supplied a full path to\r\n    // the vanilla .wasm binary.\r\n    return wasmPath;\r\n  }\r\n\r\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\r\n  if (simdSupported && threadsSupported) {\r\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\r\n  } else if (simdSupported) {\r\n    path = 'tfjs-backend-wasm-simd.wasm';\r\n  }\r\n\r\n  if (wasmFileMap != null) {\r\n    if (wasmFileMap[path] != null) {\r\n      return wasmFileMap[path];\r\n    }\r\n  }\r\n\r\n  return wasmModuleFolder + path;\r\n}\r\n\r\n/**\r\n * Initializes the wasm module and creates the js <--> wasm bridge.\r\n *\r\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\r\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\r\n * in Chrome 76).\r\n */\r\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\r\n  const [simdSupported, threadsSupported] = await Promise.all([\r\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\r\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\r\n  ]);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const factoryConfig: WasmFactoryConfig = {};\r\n\r\n    /**\r\n     * This function overrides the Emscripten module locateFile utility.\r\n     * @param path The relative path to the file that needs to be loaded.\r\n     * @param prefix The path to the main JavaScript file's directory.\r\n     */\r\n    factoryConfig.locateFile = (path, prefix) => {\r\n      if (path.endsWith('.worker.js')) {\r\n        const response = wasmWorkerContents;\r\n        const blob = new Blob([response], {type: 'application/javascript'});\r\n        return URL.createObjectURL(blob);\r\n      }\r\n\r\n      if (path.endsWith('.wasm')) {\r\n        return getPathToWasmBinary(\r\n            simdSupported as boolean, threadsSupported as boolean,\r\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\r\n      }\r\n      return prefix + path;\r\n    };\r\n\r\n    // Use the instantiateWasm override when system fetch is not available.\r\n    // Reference:\r\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\r\n    if (customFetch) {\r\n      factoryConfig.instantiateWasm =\r\n          createInstantiateWasmFunc(getPathToWasmBinary(\r\n              simdSupported as boolean, threadsSupported as boolean,\r\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\r\n    }\r\n\r\n    let initialized = false;\r\n    factoryConfig.onAbort = () => {\r\n      if (initialized) {\r\n        // Emscripten already called console.warn so no need to double log.\r\n        return;\r\n      }\r\n      if (initAborted) {\r\n        // Emscripten calls `onAbort` twice, resulting in double error\r\n        // messages.\r\n        return;\r\n      }\r\n      initAborted = true;\r\n      const rejectMsg =\r\n          'Make sure the server can serve the `.wasm` file relative to the ' +\r\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\r\n      reject({message: rejectMsg});\r\n    };\r\n\r\n    let wasm: Promise<BackendWasmModule>;\r\n    // If `wasmPath` has been defined we must initialize the vanilla module.\r\n    if (threadsSupported && simdSupported && wasmPath == null) {\r\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\r\n          [`var WasmBackendModuleThreadedSimd = ` +\r\n           wasmFactoryThreadedSimd.toString()],\r\n          {type: 'text/javascript'});\r\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\r\n    } else {\r\n      // The wasmFactory works for both vanilla and SIMD binaries.\r\n      wasm = wasmFactory(factoryConfig);\r\n    }\r\n\r\n    // The WASM module has been successfully created by the factory.\r\n    // Any error will be caught by the onAbort callback defined above.\r\n    wasm.then((module) => {\r\n      initialized = true;\r\n      initAborted = false;\r\n\r\n      const voidReturnType: string = null;\r\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\r\n      module.tfjs = {\r\n        init: module.cwrap('init', null, []),\r\n        registerTensor: module.cwrap(\r\n            'register_tensor', null,\r\n            [\r\n              'number',  // id\r\n              'number',  // size\r\n              'number',  // memoryOffset\r\n            ]),\r\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\r\n        dispose: module.cwrap('dispose', voidReturnType, []),\r\n      };\r\n\r\n      resolve({wasm: module});\r\n    });\r\n  });\r\n}\r\n\r\nfunction typedArrayFromBuffer(\r\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\r\n  switch (dtype) {\r\n    case 'float32':\r\n      return new Float32Array(buffer);\r\n    case 'int32':\r\n      return new Int32Array(buffer);\r\n    case 'bool':\r\n      return new Uint8Array(buffer);\r\n    default:\r\n      throw new Error(`Unknown dtype ${dtype}`);\r\n  }\r\n}\r\n\r\nconst wasmBinaryNames = [\r\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\r\n  'tfjs-backend-wasm-threaded-simd.wasm'\r\n] as const ;\r\ntype WasmBinaryName = typeof wasmBinaryNames[number];\r\n\r\nlet wasmPath: string = null;\r\nlet wasmPathPrefix: string = null;\r\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\r\nlet initAborted = false;\r\nlet customFetch = false;\r\n\r\n/**\r\n * @deprecated Use `setWasmPaths` instead.\r\n * Sets the path to the `.wasm` file which will be fetched when the wasm\r\n * backend is initialized. See\r\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\r\n * for more details.\r\n * @param path wasm file path or url\r\n * @param usePlatformFetch optional boolean to use platform fetch to download\r\n *     the wasm file, default to false.\r\n *\r\n * @doc {heading: 'Environment', namespace: 'wasm'}\r\n */\r\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\r\n  deprecationWarn(\r\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\r\n      ' will be removed in a future release.');\r\n  if (initAborted) {\r\n    throw new Error(\r\n        'The WASM backend was already initialized. Make sure you call ' +\r\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\r\n  }\r\n  wasmPath = path;\r\n  customFetch = usePlatformFetch;\r\n}\r\n\r\n/**\r\n * Configures the locations of the WASM binaries.\r\n *\r\n * ```js\r\n * setWasmPaths({\r\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\r\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\r\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\r\n * });\r\n * tf.setBackend('wasm');\r\n * ```\r\n *\r\n * @param prefixOrFileMap This can be either a string or object:\r\n *  - (string) The path to the directory where the WASM binaries are located.\r\n *     Note that this prefix will be used to load each binary (vanilla,\r\n *     SIMD-enabled, threading-enabled, etc.).\r\n *  - (object) Mapping from names of WASM binaries to custom\r\n *     full paths specifying the locations of those binaries. This is useful if\r\n *     your WASM binaries are not all located in the same directory, or if your\r\n *     WASM binaries have been renamed.\r\n * @param usePlatformFetch optional boolean to use platform fetch to download\r\n *     the wasm file, default to false.\r\n *\r\n * @doc {heading: 'Environment', namespace: 'wasm'}\r\n */\r\nexport function setWasmPaths(\r\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\r\n    usePlatformFetch = false): void {\r\n  if (initAborted) {\r\n    throw new Error(\r\n        'The WASM backend was already initialized. Make sure you call ' +\r\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\r\n        '`tf.ready()`');\r\n  }\r\n\r\n  if (typeof prefixOrFileMap === 'string') {\r\n    wasmPathPrefix = prefixOrFileMap;\r\n  } else {\r\n    wasmFileMap = prefixOrFileMap;\r\n    const missingPaths =\r\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\r\n    if (missingPaths.length > 0) {\r\n      throw new Error(\r\n          `There were no entries found for the following binaries: ` +\r\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\r\n          `map providing a path for each binary, or with a string indicating ` +\r\n          `the directory where all the binaries can be found.`);\r\n    }\r\n  }\r\n\r\n  customFetch = usePlatformFetch;\r\n}\r\n\r\n/** Used in unit tests. */\r\nexport function resetWasmPath(): void {\r\n  wasmPath = null;\r\n  wasmPathPrefix = null;\r\n  wasmFileMap = {};\r\n  customFetch = false;\r\n  initAborted = false;\r\n}\r\n","/** @license See the LICENSE file. */\r\n\r\n// This code is auto-generated, do not modify this file!\r\nconst version = '0.0.0';\r\nexport {version};\r\n","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport './flags_wasm';\r\n\r\nimport {registerBackend} from '@tensorflow/tfjs-core';\r\n\r\nimport {BackendWasm, init} from './backend_wasm';\r\n\r\nexport {BackendWasm, setWasmPath, setWasmPaths} from './backend_wasm';\r\nexport {version as version_wasm} from './version';\r\n\r\nconst WASM_PRIORITY = 2;\r\nregisterBackend('wasm', async () => {\r\n  const {wasm} = await init();\r\n  return new BackendWasm(wasm);\r\n}, WASM_PRIORITY);\r\n"],"names":["_FusedMatMul","util","Abs","backend_util","Add","AddN","Identity","setup","Transpose","All","Any","wasmFunc","ArgMax","AvgPool","Reshape","BatchMatMul","Cast","Ceil","ClipByValue","slice_util","buffer","concatImplCPU","Concat","Conv2D","Conv2DBackpropInput","Cos","CropAndResize","Cumsum","DepthToSpace","DepthwiseConv2dNative","supportsFullBroadcast","Equal","Exp","ExpandDims","Fill","FlipLeftRight","Floor","FloorDiv","FusedBatchNorm","FusedConv2D","FusedDepthwiseConv2D","GatherNd","gather_util","GatherV2","Greater","GreaterEqual","setupFunc","LeakyRelu","Less","LessEqual","Log","LogicalAnd","Max","Maximum","MaxPool","Mean","Min","Minimum","MirrorPad","Multiply","Neg","NonMaxSuppressionV3","NonMaxSuppressionV4","NonMaxSuppressionV5","kernelFunc","NotEqual","OneHot","OnesLike","Pack","PadV2","Pow","Prelu","Prod","rangeImplCPU","Range","RealDiv","Relu","Relu6","ResizeBilinear","Reverse","RotateWithOffset","Round","Rsqrt","ScatterNd","scatter_util","Select","Sigmoid","Sin","sliceImplCPU","Slice","Softmax","SplitV","Sqrt","Square","SquaredDifference","Step","StridedSlice","Sub","Sum","Tan","Tanh","Tile","TopK","Transform","Unpack","ZerosLike","registerKernel","env","KernelBackend","DataStorage","engine","tslib_1.__awaiter","registerBackend"],"mappings":"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"}